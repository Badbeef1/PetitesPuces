#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetitesPuces.Models
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.ComponentModel.DataAnnotations;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "BD6B8_424R_TESTS")]
    public partial class DataClasses1DataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Définitions de méthodes d'extensibilité
        partial void OnCreated();
        partial void InsertPPCategories(PPCategories instance);
        partial void UpdatePPCategories(PPCategories instance);
        partial void DeletePPCategories(PPCategories instance);
        partial void InsertPPArticlesEnPanier(PPArticlesEnPanier instance);
        partial void UpdatePPArticlesEnPanier(PPArticlesEnPanier instance);
        partial void DeletePPArticlesEnPanier(PPArticlesEnPanier instance);
        partial void InsertPPClients(PPClients instance);
        partial void UpdatePPClients(PPClients instance);
        partial void DeletePPClients(PPClients instance);
        partial void InsertPPCommandes(PPCommandes instance);
        partial void UpdatePPCommandes(PPCommandes instance);
        partial void DeletePPCommandes(PPCommandes instance);
        partial void InsertPPDetailsCommandes(PPDetailsCommandes instance);
        partial void UpdatePPDetailsCommandes(PPDetailsCommandes instance);
        partial void DeletePPDetailsCommandes(PPDetailsCommandes instance);
        partial void InsertPPPoidsLivraisons(PPPoidsLivraisons instance);
        partial void UpdatePPPoidsLivraisons(PPPoidsLivraisons instance);
        partial void DeletePPPoidsLivraisons(PPPoidsLivraisons instance);
        partial void InsertPPHistoriquePaiements(PPHistoriquePaiements instance);
        partial void UpdatePPHistoriquePaiements(PPHistoriquePaiements instance);
        partial void DeletePPHistoriquePaiements(PPHistoriquePaiements instance);
        partial void InsertPPProduits(PPProduits instance);
        partial void UpdatePPProduits(PPProduits instance);
        partial void DeletePPProduits(PPProduits instance);
        partial void InsertPPTaxeFederale(PPTaxeFederale instance);
        partial void UpdatePPTaxeFederale(PPTaxeFederale instance);
        partial void DeletePPTaxeFederale(PPTaxeFederale instance);
        partial void InsertPPTaxeProvinciale(PPTaxeProvinciale instance);
        partial void UpdatePPTaxeProvinciale(PPTaxeProvinciale instance);
        partial void DeletePPTaxeProvinciale(PPTaxeProvinciale instance);
        partial void InsertPPTypesLivraison(PPTypesLivraison instance);
        partial void UpdatePPTypesLivraison(PPTypesLivraison instance);
        partial void DeletePPTypesLivraison(PPTypesLivraison instance);
        partial void InsertPPTypesPoids(PPTypesPoids instance);
        partial void UpdatePPTypesPoids(PPTypesPoids instance);
        partial void DeletePPTypesPoids(PPTypesPoids instance);
        partial void InsertPPVendeurs(PPVendeurs instance);
        partial void UpdatePPVendeurs(PPVendeurs instance);
        partial void DeletePPVendeurs(PPVendeurs instance);
        partial void InsertPPVendeursClients(PPVendeursClients instance);
        partial void UpdatePPVendeursClients(PPVendeursClients instance);
        partial void DeletePPVendeursClients(PPVendeursClients instance);
        partial void InsertPPMessages(PPMessages instance);
        partial void UpdatePPMessages(PPMessages instance);
        partial void DeletePPMessages(PPMessages instance);
        partial void InsertPPDestinataires(PPDestinataires instance);
        partial void UpdatePPDestinataires(PPDestinataires instance);
        partial void DeletePPDestinataires(PPDestinataires instance);
        partial void InsertPPLieu(PPLieu instance);
        partial void UpdatePPLieu(PPLieu instance);
        partial void DeletePPLieu(PPLieu instance);
        partial void InsertPPGestionnaire(PPGestionnaire instance);
        partial void UpdatePPGestionnaire(PPGestionnaire instance);
        partial void DeletePPGestionnaire(PPGestionnaire instance);
        #endregion

        public DataClasses1DataContext() :
                base(global::PetitesPuces.Properties.Settings.Default.BD6B8_424R_TESTSConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<PPCategories> PPCategories
        {
            get
            {
                return this.GetTable<PPCategories>();
            }
        }

        public System.Data.Linq.Table<PPArticlesEnPanier> PPArticlesEnPanier
        {
            get
            {
                return this.GetTable<PPArticlesEnPanier>();
            }
        }

        public System.Data.Linq.Table<PPClients> PPClients
        {
            get
            {
                return this.GetTable<PPClients>();
            }
        }

        public System.Data.Linq.Table<PPCommandes> PPCommandes
        {
            get
            {
                return this.GetTable<PPCommandes>();
            }
        }

        public System.Data.Linq.Table<PPDetailsCommandes> PPDetailsCommandes
        {
            get
            {
                return this.GetTable<PPDetailsCommandes>();
            }
        }

        public System.Data.Linq.Table<PPPoidsLivraisons> PPPoidsLivraisons
        {
            get
            {
                return this.GetTable<PPPoidsLivraisons>();
            }
        }

        public System.Data.Linq.Table<PPHistoriquePaiements> PPHistoriquePaiements
        {
            get
            {
                return this.GetTable<PPHistoriquePaiements>();
            }
        }

        public System.Data.Linq.Table<PPProduits> PPProduits
        {
            get
            {
                return this.GetTable<PPProduits>();
            }
        }

        public System.Data.Linq.Table<PPTaxeFederale> PPTaxeFederale
        {
            get
            {
                return this.GetTable<PPTaxeFederale>();
            }
        }

        public System.Data.Linq.Table<PPTaxeProvinciale> PPTaxeProvinciale
        {
            get
            {
                return this.GetTable<PPTaxeProvinciale>();
            }
        }

        public System.Data.Linq.Table<PPTypesLivraison> PPTypesLivraison
        {
            get
            {
                return this.GetTable<PPTypesLivraison>();
            }
        }

        public System.Data.Linq.Table<PPTypesPoids> PPTypesPoids
        {
            get
            {
                return this.GetTable<PPTypesPoids>();
            }
        }

        public System.Data.Linq.Table<PPVendeurs> PPVendeurs
        {
            get
            {
                return this.GetTable<PPVendeurs>();
            }
        }

        public System.Data.Linq.Table<PPVendeursClients> PPVendeursClients
        {
            get
            {
                return this.GetTable<PPVendeursClients>();
            }
        }

        public System.Data.Linq.Table<PPMessages> PPMessages
        {
            get
            {
                return this.GetTable<PPMessages>();
            }
        }

        public System.Data.Linq.Table<PPDestinataires> PPDestinataires
        {
            get
            {
                return this.GetTable<PPDestinataires>();
            }
        }

        public System.Data.Linq.Table<PPLieu> PPLieu
        {
            get
            {
                return this.GetTable<PPLieu>();
            }
        }

        public System.Data.Linq.Table<PPGestionnaire> PPGestionnaire
        {
            get
            {
                return this.GetTable<PPGestionnaire>();
            }
        }

        public System.Data.Linq.Table<PPEvaluations> PPEvaluations
        {
            get
            {
                return this.GetTable<PPEvaluations>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPCategories")]
    public partial class PPCategories : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _NoCategorie;


        private string _Description;

        private string _Details;

        private EntitySet<PPProduits> _PPProduits;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoCategorieChanging(int value);
        partial void OnNoCategorieChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnDetailsChanging(string value);
        partial void OnDetailsChanged();
        #endregion

        public PPCategories()
        {
            this._PPProduits = new EntitySet<PPProduits>(new Action<PPProduits>(this.attach_PPProduits), new Action<PPProduits>(this.detach_PPProduits));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoCategorie", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int NoCategorie
        {
            get
            {
                return this._NoCategorie;
            }
            set
            {
                if ((this._NoCategorie != value))
                {
                    this.OnNoCategorieChanging(value);
                    this.SendPropertyChanging();
                    this._NoCategorie = value;
                    this.SendPropertyChanged("NoCategorie");
                    this.OnNoCategorieChanged();
                }
            }
        }
        [Required(ErrorMessage = "Le champ description ne peut pas être vide")]
        [MaxLength(50,ErrorMessage = "Le champ description a une limite de 50 caractères.")]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(50)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Details", DbType = "VarChar(MAX)")]
        [Required(ErrorMessage = "Le champ détail ne peut pas être vide.")]
        public string Details
        {
            get
            {
                return this._Details;
            }
            set
            {
                if ((this._Details != value))
                {
                    this.OnDetailsChanging(value);
                    this.SendPropertyChanging();
                    this._Details = value;
                    this.SendPropertyChanged("Details");
                    this.OnDetailsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPCategories_PPProduits", Storage = "_PPProduits", ThisKey = "NoCategorie", OtherKey = "NoCategorie")]
        public EntitySet<PPProduits> PPProduits
        {
            get
            {
                return this._PPProduits;
            }
            set
            {
                this._PPProduits.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPProduits(PPProduits entity)
        {
            this.SendPropertyChanging();
            entity.PPCategories = this;
        }

        private void detach_PPProduits(PPProduits entity)
        {
            this.SendPropertyChanging();
            entity.PPCategories = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPArticlesEnPanier")]
    public partial class PPArticlesEnPanier : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoPanier;

        private System.Nullable<long> _NoClient;

        private System.Nullable<long> _NoVendeur;

        private System.Nullable<long> _NoProduit;

        private System.Nullable<System.DateTime> _DateCreation;

        private System.Nullable<short> _NbItems;

        private EntityRef<PPClients> _PPClients;

        private EntityRef<PPProduits> _PPProduits;

        private EntityRef<PPVendeurs> _PPVendeurs;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoPanierChanging(long value);
        partial void OnNoPanierChanged();
        partial void OnNoClientChanging(System.Nullable<long> value);
        partial void OnNoClientChanged();
        partial void OnNoVendeurChanging(System.Nullable<long> value);
        partial void OnNoVendeurChanged();
        partial void OnNoProduitChanging(System.Nullable<long> value);
        partial void OnNoProduitChanged();
        partial void OnDateCreationChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreationChanged();
        partial void OnNbItemsChanging(System.Nullable<short> value);
        partial void OnNbItemsChanged();
        #endregion

        public PPArticlesEnPanier()
        {
            this._PPClients = default(EntityRef<PPClients>);
            this._PPProduits = default(EntityRef<PPProduits>);
            this._PPVendeurs = default(EntityRef<PPVendeurs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoPanier", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoPanier
        {
            get
            {
                return this._NoPanier;
            }
            set
            {
                if ((this._NoPanier != value))
                {
                    this.OnNoPanierChanging(value);
                    this.SendPropertyChanging();
                    this._NoPanier = value;
                    this.SendPropertyChanged("NoPanier");
                    this.OnNoPanierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoClient", DbType = "BigInt")]
        public System.Nullable<long> NoClient
        {
            get
            {
                return this._NoClient;
            }
            set
            {
                if ((this._NoClient != value))
                {
                    if (this._PPClients.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoClientChanging(value);
                    this.SendPropertyChanging();
                    this._NoClient = value;
                    this.SendPropertyChanged("NoClient");
                    this.OnNoClientChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoVendeur", DbType = "BigInt")]
        public System.Nullable<long> NoVendeur
        {
            get
            {
                return this._NoVendeur;
            }
            set
            {
                if ((this._NoVendeur != value))
                {
                    if (this._PPVendeurs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoVendeurChanging(value);
                    this.SendPropertyChanging();
                    this._NoVendeur = value;
                    this.SendPropertyChanged("NoVendeur");
                    this.OnNoVendeurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoProduit", DbType = "BigInt")]
        public System.Nullable<long> NoProduit
        {
            get
            {
                return this._NoProduit;
            }
            set
            {
                if ((this._NoProduit != value))
                {
                    if (this._PPProduits.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoProduitChanging(value);
                    this.SendPropertyChanging();
                    this._NoProduit = value;
                    this.SendPropertyChanged("NoProduit");
                    this.OnNoProduitChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateCreation", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateCreation
        {
            get
            {
                return this._DateCreation;
            }
            set
            {
                if ((this._DateCreation != value))
                {
                    this.OnDateCreationChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreation = value;
                    this.SendPropertyChanged("DateCreation");
                    this.OnDateCreationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NbItems", DbType = "SmallInt")]
        public System.Nullable<short> NbItems
        {
            get
            {
                return this._NbItems;
            }
            set
            {
                if ((this._NbItems != value))
                {
                    this.OnNbItemsChanging(value);
                    this.SendPropertyChanging();
                    this._NbItems = value;
                    this.SendPropertyChanged("NbItems");
                    this.OnNbItemsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPClients_PPArticlesEnPanier", Storage = "_PPClients", ThisKey = "NoClient", OtherKey = "NoClient", IsForeignKey = true)]
        public PPClients PPClients
        {
            get
            {
                return this._PPClients.Entity;
            }
            set
            {
                PPClients previousValue = this._PPClients.Entity;
                if (((previousValue != value)
                            || (this._PPClients.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPClients.Entity = null;
                        previousValue.PPArticlesEnPanier.Remove(this);
                    }
                    this._PPClients.Entity = value;
                    if ((value != null))
                    {
                        value.PPArticlesEnPanier.Add(this);
                        this._NoClient = value.NoClient;
                    }
                    else
                    {
                        this._NoClient = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPClients");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPProduits_PPArticlesEnPanier", Storage = "_PPProduits", ThisKey = "NoProduit", OtherKey = "NoProduit", IsForeignKey = true)]
        public PPProduits PPProduits
        {
            get
            {
                return this._PPProduits.Entity;
            }
            set
            {
                PPProduits previousValue = this._PPProduits.Entity;
                if (((previousValue != value)
                            || (this._PPProduits.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPProduits.Entity = null;
                        previousValue.PPArticlesEnPanier.Remove(this);
                    }
                    this._PPProduits.Entity = value;
                    if ((value != null))
                    {
                        value.PPArticlesEnPanier.Add(this);
                        this._NoProduit = value.NoProduit;
                    }
                    else
                    {
                        this._NoProduit = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPProduits");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPArticlesEnPanier", Storage = "_PPVendeurs", ThisKey = "NoVendeur", OtherKey = "NoVendeur", IsForeignKey = true)]
        public PPVendeurs PPVendeurs
        {
            get
            {
                return this._PPVendeurs.Entity;
            }
            set
            {
                PPVendeurs previousValue = this._PPVendeurs.Entity;
                if (((previousValue != value)
                            || (this._PPVendeurs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPVendeurs.Entity = null;
                        previousValue.PPArticlesEnPanier.Remove(this);
                    }
                    this._PPVendeurs.Entity = value;
                    if ((value != null))
                    {
                        value.PPArticlesEnPanier.Add(this);
                        this._NoVendeur = value.NoVendeur;
                    }
                    else
                    {
                        this._NoVendeur = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPVendeurs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPClients")]
    public partial class PPClients : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoClient;

        private string _AdresseEmail;

        private string _MotDePasse;

        private string _Nom;

        private string _Prenom;

        private string _Rue;

        private string _Ville;

        private string _Province;

        private string _CodePostal;

        private string _Pays;

        private string _Tel1;

        private string _Tel2;

        private System.Nullable<System.DateTime> _DateCreation;

        private System.Nullable<System.DateTime> _DateMAJ;

        private System.Nullable<short> _NbConnexions;

        private System.Nullable<System.DateTime> _DateDerniereConnexion;

        private System.Nullable<short> _Statut;

        private EntitySet<PPArticlesEnPanier> _PPArticlesEnPanier;

        private EntitySet<PPCommandes> _PPCommandes;

        private EntitySet<PPVendeursClients> _PPVendeursClients;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoClientChanging(long value);
        partial void OnNoClientChanged();
        partial void OnAdresseEmailChanging(string value);
        partial void OnAdresseEmailChanged();
        partial void OnMotDePasseChanging(string value);
        partial void OnMotDePasseChanged();
        partial void OnNomChanging(string value);
        partial void OnNomChanged();
        partial void OnPrenomChanging(string value);
        partial void OnPrenomChanged();
        partial void OnRueChanging(string value);
        partial void OnRueChanged();
        partial void OnVilleChanging(string value);
        partial void OnVilleChanged();
        partial void OnProvinceChanging(string value);
        partial void OnProvinceChanged();
        partial void OnCodePostalChanging(string value);
        partial void OnCodePostalChanged();
        partial void OnPaysChanging(string value);
        partial void OnPaysChanged();
        partial void OnTel1Changing(string value);
        partial void OnTel1Changed();
        partial void OnTel2Changing(string value);
        partial void OnTel2Changed();
        partial void OnDateCreationChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreationChanged();
        partial void OnDateMAJChanging(System.Nullable<System.DateTime> value);
        partial void OnDateMAJChanged();
        partial void OnNbConnexionsChanging(System.Nullable<short> value);
        partial void OnNbConnexionsChanged();
        partial void OnDateDerniereConnexionChanging(System.Nullable<System.DateTime> value);
        partial void OnDateDerniereConnexionChanged();
        partial void OnStatutChanging(System.Nullable<short> value);
        partial void OnStatutChanged();
        #endregion

        public PPClients()
        {
            this._PPArticlesEnPanier = new EntitySet<PPArticlesEnPanier>(new Action<PPArticlesEnPanier>(this.attach_PPArticlesEnPanier), new Action<PPArticlesEnPanier>(this.detach_PPArticlesEnPanier));
            this._PPCommandes = new EntitySet<PPCommandes>(new Action<PPCommandes>(this.attach_PPCommandes), new Action<PPCommandes>(this.detach_PPCommandes));
            this._PPVendeursClients = new EntitySet<PPVendeursClients>(new Action<PPVendeursClients>(this.attach_PPVendeursClients), new Action<PPVendeursClients>(this.detach_PPVendeursClients));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoClient", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoClient
        {
            get
            {
                return this._NoClient;
            }
            set
            {
                if ((this._NoClient != value))
                {
                    this.OnNoClientChanging(value);
                    this.SendPropertyChanging();
                    this._NoClient = value;
                    this.SendPropertyChanged("NoClient");
                    this.OnNoClientChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdresseEmail", DbType = "VarChar(100)")]
        [MaxLength(100, ErrorMessage = "Longueur maximale du champ : 100 caractères")]
        [Required]
        public string AdresseEmail
        {
            get
            {
                return this._AdresseEmail;
            }
            set
            {
                if ((this._AdresseEmail != value))
                {
                    this.OnAdresseEmailChanging(value);
                    this.SendPropertyChanging();
                    this._AdresseEmail = value;
                    this.SendPropertyChanged("AdresseEmail");
                    this.OnAdresseEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MotDePasse", DbType = "VarChar(50)")]
        [MaxLength(50, ErrorMessage = "Longueur maximale du champ : 50 caractères")]
        [DataType(DataType.Password)]
        public string MotDePasse
        {
            get
            {
                return this._MotDePasse;
            }
            set
            {
                if ((this._MotDePasse != value))
                {
                    this.OnMotDePasseChanging(value);
                    this.SendPropertyChanging();
                    this._MotDePasse = value;
                    this.SendPropertyChanged("MotDePasse");
                    this.OnMotDePasseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nom", DbType = "VarChar(50)")]
        [RegularExpression(@"^[\p{L}]((['\- ][\p{L}])|[\p{L}])+$", ErrorMessage = "Le champs doit contenir seulement des lettres de l'alphabet latin et les caractères <-> et <'> doivent être insérés entre des lettres.")]
        [MaxLength(50, ErrorMessage = "Longueur maximale du champ : 50 caractères")]
        public string Nom
        {
            get
            {
                return this._Nom;
            }
            set
            {
                if ((this._Nom != value))
                {
                    this.OnNomChanging(value);
                    this.SendPropertyChanging();
                    this._Nom = value;
                    this.SendPropertyChanged("Nom");
                    this.OnNomChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Prenom", DbType = "VarChar(50)")]
        [RegularExpression(@"^[\p{L}]((['\- ][\p{L}])|[\p{L}])+$", ErrorMessage = "Le champs doit contenir seulement des lettres de l'alphabet latin et les caractères <-> et <'> doivent être insérés entre des lettres.")]
        [MaxLength(50, ErrorMessage = "Longueur maximale du champ : 50 caractères")]
        public string Prenom
        {
            get
            {
                return this._Prenom;
            }
            set
            {
                if ((this._Prenom != value))
                {
                    this.OnPrenomChanging(value);
                    this.SendPropertyChanging();
                    this._Prenom = value;
                    this.SendPropertyChanged("Prenom");
                    this.OnPrenomChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rue", DbType = "VarChar(50)")]
        [MaxLength(50, ErrorMessage = "Longueur maximale du champ : 50 caractères")]
        public string Rue
        {
            get
            {
                return this._Rue;
            }
            set
            {
                if ((this._Rue != value))
                {
                    this.OnRueChanging(value);
                    this.SendPropertyChanging();
                    this._Rue = value;
                    this.SendPropertyChanged("Rue");
                    this.OnRueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ville", DbType = "VarChar(50)")]
        [MaxLength(50, ErrorMessage = "Longueur maximale du champ : 50 caractères")]
        public string Ville
        {
            get
            {
                return this._Ville;
            }
            set
            {
                if ((this._Ville != value))
                {
                    this.OnVilleChanging(value);
                    this.SendPropertyChanging();
                    this._Ville = value;
                    this.SendPropertyChanged("Ville");
                    this.OnVilleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Province", DbType = "Char(2)")]
        public string Province
        {
            get
            {
                return this._Province;
            }
            set
            {
                if ((this._Province != value))
                {
                    this.OnProvinceChanging(value);
                    this.SendPropertyChanging();
                    this._Province = value;
                    this.SendPropertyChanged("Province");
                    this.OnProvinceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodePostal", DbType = "VarChar(7)")]
        [RegularExpression("[ABCEGHJKLMNPRSTVXY][0-9][ABCEGHJKLMNPRSTVWXYZ] [0-9][ABCEGHJKLMNPRSTVWXYZ][0-9]", ErrorMessage = "Le format du champs doit être A9A 9A9.")]

        public string CodePostal
        {
            get
            {
                return this._CodePostal;
            }
            set
            {
                if ((this._CodePostal != value))
                {
                    this.OnCodePostalChanging(value);
                    this.SendPropertyChanging();
                    this._CodePostal = value;
                    this.SendPropertyChanged("CodePostal");
                    this.OnCodePostalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pays", DbType = "VarChar(10)")]
        public string Pays
        {
            get
            {
                return this._Pays;
            }
            set
            {
                if ((this._Pays != value))
                {
                    this.OnPaysChanging(value);
                    this.SendPropertyChanging();
                    this._Pays = value;
                    this.SendPropertyChanged("Pays");
                    this.OnPaysChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel1", DbType = "VarChar(20)")]
        [RegularExpression(@"^\(\d{3}\) \d{3}-\d{4}$", ErrorMessage = "Le champs doit contenir seulement des chiffres et respecter le format (999) 999-9999.")]
        [MaxLength(20, ErrorMessage = "Longueur maximale du champ : 20 caractères")]
        public string Tel1
        {
            get
            {
                return this._Tel1;
            }
            set
            {
                if ((this._Tel1 != value))
                {
                    this.OnTel1Changing(value);
                    this.SendPropertyChanging();
                    this._Tel1 = value;
                    this.SendPropertyChanged("Tel1");
                    this.OnTel1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel2", DbType = "VarChar(20)")]
        [RegularExpression(@"^\(\d{3}\) \d{3}-\d{4}$", ErrorMessage = "Le champs doit contenir seulement des chiffres et respecter le format (999) 999-9999.")]
        [MaxLength(20, ErrorMessage = "Longueur maximale du champ : 20 caractères")]
        public string Tel2
        {
            get
            {
                return this._Tel2;
            }
            set
            {
                if ((this._Tel2 != value))
                {
                    this.OnTel2Changing(value);
                    this.SendPropertyChanging();
                    this._Tel2 = value;
                    this.SendPropertyChanged("Tel2");
                    this.OnTel2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateCreation", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateCreation
        {
            get
            {
                return this._DateCreation;
            }
            set
            {
                if ((this._DateCreation != value))
                {
                    this.OnDateCreationChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreation = value;
                    this.SendPropertyChanged("DateCreation");
                    this.OnDateCreationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateMAJ", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateMAJ
        {
            get
            {
                return this._DateMAJ;
            }
            set
            {
                if ((this._DateMAJ != value))
                {
                    this.OnDateMAJChanging(value);
                    this.SendPropertyChanging();
                    this._DateMAJ = value;
                    this.SendPropertyChanged("DateMAJ");
                    this.OnDateMAJChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NbConnexions", DbType = "SmallInt")]
        public System.Nullable<short> NbConnexions
        {
            get
            {
                return this._NbConnexions;
            }
            set
            {
                if ((this._NbConnexions != value))
                {
                    this.OnNbConnexionsChanging(value);
                    this.SendPropertyChanging();
                    this._NbConnexions = value;
                    this.SendPropertyChanged("NbConnexions");
                    this.OnNbConnexionsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateDerniereConnexion", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateDerniereConnexion
        {
            get
            {
                return this._DateDerniereConnexion;
            }
            set
            {
                if ((this._DateDerniereConnexion != value))
                {
                    this.OnDateDerniereConnexionChanging(value);
                    this.SendPropertyChanging();
                    this._DateDerniereConnexion = value;
                    this.SendPropertyChanged("DateDerniereConnexion");
                    this.OnDateDerniereConnexionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Statut", DbType = "SmallInt")]
        public System.Nullable<short> Statut
        {
            get
            {
                return this._Statut;
            }
            set
            {
                if ((this._Statut != value))
                {
                    this.OnStatutChanging(value);
                    this.SendPropertyChanging();
                    this._Statut = value;
                    this.SendPropertyChanged("Statut");
                    this.OnStatutChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPClients_PPArticlesEnPanier", Storage = "_PPArticlesEnPanier", ThisKey = "NoClient", OtherKey = "NoClient")]
        public EntitySet<PPArticlesEnPanier> PPArticlesEnPanier
        {
            get
            {
                return this._PPArticlesEnPanier;
            }
            set
            {
                this._PPArticlesEnPanier.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPClients_PPCommandes", Storage = "_PPCommandes", ThisKey = "NoClient", OtherKey = "NoClient")]
        public EntitySet<PPCommandes> PPCommandes
        {
            get
            {
                return this._PPCommandes;
            }
            set
            {
                this._PPCommandes.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPClients_PPVendeursClients", Storage = "_PPVendeursClients", ThisKey = "NoClient", OtherKey = "NoClient")]
        public EntitySet<PPVendeursClients> PPVendeursClients
        {
            get
            {
                return this._PPVendeursClients;
            }
            set
            {
                this._PPVendeursClients.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPArticlesEnPanier(PPArticlesEnPanier entity)
        {
            this.SendPropertyChanging();
            entity.PPClients = this;
        }

        private void detach_PPArticlesEnPanier(PPArticlesEnPanier entity)
        {
            this.SendPropertyChanging();
            entity.PPClients = null;
        }

        private void attach_PPCommandes(PPCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPClients = this;
        }

        private void detach_PPCommandes(PPCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPClients = null;
        }

        private void attach_PPVendeursClients(PPVendeursClients entity)
        {
            this.SendPropertyChanging();
            entity.PPClients = this;
        }

        private void detach_PPVendeursClients(PPVendeursClients entity)
        {
            this.SendPropertyChanging();
            entity.PPClients = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPCommandes")]
    public partial class PPCommandes : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoCommande;

        private System.Nullable<long> _NoClient;

        private System.Nullable<long> _NoVendeur;

        private System.Nullable<System.DateTime> _DateCommande;

        private System.Nullable<decimal> _CoutLivraison;

        private System.Nullable<short> _TypeLivraison;

        private System.Nullable<decimal> _MontantTotAvantTaxes;

        private System.Nullable<decimal> _TPS;

        private System.Nullable<decimal> _TVQ;

        private System.Nullable<decimal> _PoidsTotal;

        private System.Nullable<char> _Statut;

        private string _NoAutorisation;

        private EntitySet<PPDetailsCommandes> _PPDetailsCommandes;

        private EntityRef<PPClients> _PPClients;

        private EntityRef<PPTypesLivraison> _PPTypesLivraison;

        private EntityRef<PPVendeurs> _PPVendeurs;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoCommandeChanging(long value);
        partial void OnNoCommandeChanged();
        partial void OnNoClientChanging(System.Nullable<long> value);
        partial void OnNoClientChanged();
        partial void OnNoVendeurChanging(System.Nullable<long> value);
        partial void OnNoVendeurChanged();
        partial void OnDateCommandeChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCommandeChanged();
        partial void OnCoutLivraisonChanging(System.Nullable<decimal> value);
        partial void OnCoutLivraisonChanged();
        partial void OnTypeLivraisonChanging(System.Nullable<short> value);
        partial void OnTypeLivraisonChanged();
        partial void OnMontantTotAvantTaxesChanging(System.Nullable<decimal> value);
        partial void OnMontantTotAvantTaxesChanged();
        partial void OnTPSChanging(System.Nullable<decimal> value);
        partial void OnTPSChanged();
        partial void OnTVQChanging(System.Nullable<decimal> value);
        partial void OnTVQChanged();
        partial void OnPoidsTotalChanging(System.Nullable<decimal> value);
        partial void OnPoidsTotalChanged();
        partial void OnStatutChanging(System.Nullable<char> value);
        partial void OnStatutChanged();
        partial void OnNoAutorisationChanging(string value);
        partial void OnNoAutorisationChanged();
        #endregion

        public PPCommandes()
        {
            this._PPDetailsCommandes = new EntitySet<PPDetailsCommandes>(new Action<PPDetailsCommandes>(this.attach_PPDetailsCommandes), new Action<PPDetailsCommandes>(this.detach_PPDetailsCommandes));
            this._PPClients = default(EntityRef<PPClients>);
            this._PPTypesLivraison = default(EntityRef<PPTypesLivraison>);
            this._PPVendeurs = default(EntityRef<PPVendeurs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoCommande", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoCommande
        {
            get
            {
                return this._NoCommande;
            }
            set
            {
                if ((this._NoCommande != value))
                {
                    this.OnNoCommandeChanging(value);
                    this.SendPropertyChanging();
                    this._NoCommande = value;
                    this.SendPropertyChanged("NoCommande");
                    this.OnNoCommandeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoClient", DbType = "BigInt")]
        public System.Nullable<long> NoClient
        {
            get
            {
                return this._NoClient;
            }
            set
            {
                if ((this._NoClient != value))
                {
                    if (this._PPClients.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoClientChanging(value);
                    this.SendPropertyChanging();
                    this._NoClient = value;
                    this.SendPropertyChanged("NoClient");
                    this.OnNoClientChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoVendeur", DbType = "BigInt")]
        public System.Nullable<long> NoVendeur
        {
            get
            {
                return this._NoVendeur;
            }
            set
            {
                if ((this._NoVendeur != value))
                {
                    if (this._PPVendeurs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoVendeurChanging(value);
                    this.SendPropertyChanging();
                    this._NoVendeur = value;
                    this.SendPropertyChanged("NoVendeur");
                    this.OnNoVendeurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateCommande", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateCommande
        {
            get
            {
                return this._DateCommande;
            }
            set
            {
                if ((this._DateCommande != value))
                {
                    this.OnDateCommandeChanging(value);
                    this.SendPropertyChanging();
                    this._DateCommande = value;
                    this.SendPropertyChanged("DateCommande");
                    this.OnDateCommandeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CoutLivraison", DbType = "SmallMoney")]
        public System.Nullable<decimal> CoutLivraison
        {
            get
            {
                return this._CoutLivraison;
            }
            set
            {
                if ((this._CoutLivraison != value))
                {
                    this.OnCoutLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._CoutLivraison = value;
                    this.SendPropertyChanged("CoutLivraison");
                    this.OnCoutLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TypeLivraison", DbType = "SmallInt")]
        public System.Nullable<short> TypeLivraison
        {
            get
            {
                return this._TypeLivraison;
            }
            set
            {
                if ((this._TypeLivraison != value))
                {
                    if (this._PPTypesLivraison.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnTypeLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._TypeLivraison = value;
                    this.SendPropertyChanged("TypeLivraison");
                    this.OnTypeLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MontantTotAvantTaxes", DbType = "SmallMoney")]
        public System.Nullable<decimal> MontantTotAvantTaxes
        {
            get
            {
                return this._MontantTotAvantTaxes;
            }
            set
            {
                if ((this._MontantTotAvantTaxes != value))
                {
                    this.OnMontantTotAvantTaxesChanging(value);
                    this.SendPropertyChanging();
                    this._MontantTotAvantTaxes = value;
                    this.SendPropertyChanged("MontantTotAvantTaxes");
                    this.OnMontantTotAvantTaxesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TPS", DbType = "SmallMoney")]
        public System.Nullable<decimal> TPS
        {
            get
            {
                return this._TPS;
            }
            set
            {
                if ((this._TPS != value))
                {
                    this.OnTPSChanging(value);
                    this.SendPropertyChanging();
                    this._TPS = value;
                    this.SendPropertyChanged("TPS");
                    this.OnTPSChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TVQ", DbType = "SmallMoney")]
        public System.Nullable<decimal> TVQ
        {
            get
            {
                return this._TVQ;
            }
            set
            {
                if ((this._TVQ != value))
                {
                    this.OnTVQChanging(value);
                    this.SendPropertyChanging();
                    this._TVQ = value;
                    this.SendPropertyChanged("TVQ");
                    this.OnTVQChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoidsTotal", DbType = "Decimal(8,1)")]
        public System.Nullable<decimal> PoidsTotal
        {
            get
            {
                return this._PoidsTotal;
            }
            set
            {
                if ((this._PoidsTotal != value))
                {
                    this.OnPoidsTotalChanging(value);
                    this.SendPropertyChanging();
                    this._PoidsTotal = value;
                    this.SendPropertyChanged("PoidsTotal");
                    this.OnPoidsTotalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Statut", DbType = "Char(1)")]
        public System.Nullable<char> Statut
        {
            get
            {
                return this._Statut;
            }
            set
            {
                if ((this._Statut != value))
                {
                    this.OnStatutChanging(value);
                    this.SendPropertyChanging();
                    this._Statut = value;
                    this.SendPropertyChanged("Statut");
                    this.OnStatutChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoAutorisation", DbType = "VarChar(50)")]
        public string NoAutorisation
        {
            get
            {
                return this._NoAutorisation;
            }
            set
            {
                if ((this._NoAutorisation != value))
                {
                    this.OnNoAutorisationChanging(value);
                    this.SendPropertyChanging();
                    this._NoAutorisation = value;
                    this.SendPropertyChanged("NoAutorisation");
                    this.OnNoAutorisationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPCommandes_PPDetailsCommandes", Storage = "_PPDetailsCommandes", ThisKey = "NoCommande", OtherKey = "NoCommande")]
        public EntitySet<PPDetailsCommandes> PPDetailsCommandes
        {
            get
            {
                return this._PPDetailsCommandes;
            }
            set
            {
                this._PPDetailsCommandes.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPClients_PPCommandes", Storage = "_PPClients", ThisKey = "NoClient", OtherKey = "NoClient", IsForeignKey = true)]
        public PPClients PPClients
        {
            get
            {
                return this._PPClients.Entity;
            }
            set
            {
                PPClients previousValue = this._PPClients.Entity;
                if (((previousValue != value)
                            || (this._PPClients.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPClients.Entity = null;
                        previousValue.PPCommandes.Remove(this);
                    }
                    this._PPClients.Entity = value;
                    if ((value != null))
                    {
                        value.PPCommandes.Add(this);
                        this._NoClient = value.NoClient;
                    }
                    else
                    {
                        this._NoClient = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPClients");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPTypesLivraison_PPCommandes", Storage = "_PPTypesLivraison", ThisKey = "TypeLivraison", OtherKey = "CodeLivraison", IsForeignKey = true)]
        public PPTypesLivraison PPTypesLivraison
        {
            get
            {
                return this._PPTypesLivraison.Entity;
            }
            set
            {
                PPTypesLivraison previousValue = this._PPTypesLivraison.Entity;
                if (((previousValue != value)
                            || (this._PPTypesLivraison.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPTypesLivraison.Entity = null;
                        previousValue.PPCommandes.Remove(this);
                    }
                    this._PPTypesLivraison.Entity = value;
                    if ((value != null))
                    {
                        value.PPCommandes.Add(this);
                        this._TypeLivraison = value.CodeLivraison;
                    }
                    else
                    {
                        this._TypeLivraison = default(Nullable<short>);
                    }
                    this.SendPropertyChanged("PPTypesLivraison");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPCommandes", Storage = "_PPVendeurs", ThisKey = "NoVendeur", OtherKey = "NoVendeur", IsForeignKey = true)]
        public PPVendeurs PPVendeurs
        {
            get
            {
                return this._PPVendeurs.Entity;
            }
            set
            {
                PPVendeurs previousValue = this._PPVendeurs.Entity;
                if (((previousValue != value)
                            || (this._PPVendeurs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPVendeurs.Entity = null;
                        previousValue.PPCommandes.Remove(this);
                    }
                    this._PPVendeurs.Entity = value;
                    if ((value != null))
                    {
                        value.PPCommandes.Add(this);
                        this._NoVendeur = value.NoVendeur;
                    }
                    else
                    {
                        this._NoVendeur = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPVendeurs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPDetailsCommandes(PPDetailsCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPCommandes = this;
        }

        private void detach_PPDetailsCommandes(PPDetailsCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPCommandes = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPDetailsCommandes")]
    public partial class PPDetailsCommandes : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoDetailCommandes;

        private System.Nullable<long> _NoCommande;

        private System.Nullable<long> _NoProduit;

        private System.Nullable<decimal> _PrixVente;

        private System.Nullable<short> _Quantité;

        private EntityRef<PPCommandes> _PPCommandes;

        private EntityRef<PPProduits> _PPProduits;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoDetailCommandesChanging(long value);
        partial void OnNoDetailCommandesChanged();
        partial void OnNoCommandeChanging(System.Nullable<long> value);
        partial void OnNoCommandeChanged();
        partial void OnNoProduitChanging(System.Nullable<long> value);
        partial void OnNoProduitChanged();
        partial void OnPrixVenteChanging(System.Nullable<decimal> value);
        partial void OnPrixVenteChanged();
        partial void OnQuantitéChanging(System.Nullable<short> value);
        partial void OnQuantitéChanged();
        #endregion

        public PPDetailsCommandes()
        {
            this._PPCommandes = default(EntityRef<PPCommandes>);
            this._PPProduits = default(EntityRef<PPProduits>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoDetailCommandes", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoDetailCommandes
        {
            get
            {
                return this._NoDetailCommandes;
            }
            set
            {
                if ((this._NoDetailCommandes != value))
                {
                    this.OnNoDetailCommandesChanging(value);
                    this.SendPropertyChanging();
                    this._NoDetailCommandes = value;
                    this.SendPropertyChanged("NoDetailCommandes");
                    this.OnNoDetailCommandesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoCommande", DbType = "BigInt")]
        public System.Nullable<long> NoCommande
        {
            get
            {
                return this._NoCommande;
            }
            set
            {
                if ((this._NoCommande != value))
                {
                    if (this._PPCommandes.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoCommandeChanging(value);
                    this.SendPropertyChanging();
                    this._NoCommande = value;
                    this.SendPropertyChanged("NoCommande");
                    this.OnNoCommandeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoProduit", DbType = "BigInt")]
        public System.Nullable<long> NoProduit
        {
            get
            {
                return this._NoProduit;
            }
            set
            {
                if ((this._NoProduit != value))
                {
                    if (this._PPProduits.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoProduitChanging(value);
                    this.SendPropertyChanging();
                    this._NoProduit = value;
                    this.SendPropertyChanged("NoProduit");
                    this.OnNoProduitChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PrixVente", DbType = "SmallMoney")]
        [DisplayFormat(DataFormatString = "{0:C}")]
        public System.Nullable<decimal> PrixVente
        {
            get
            {
                return this._PrixVente;
            }
            set
            {
                if ((this._PrixVente != value))
                {
                    this.OnPrixVenteChanging(value);
                    this.SendPropertyChanging();
                    this._PrixVente = value;
                    this.SendPropertyChanged("PrixVente");
                    this.OnPrixVenteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Quantité", DbType = "SmallInt")]
        public System.Nullable<short> Quantité
        {
            get
            {
                return this._Quantité;
            }
            set
            {
                if ((this._Quantité != value))
                {
                    this.OnQuantitéChanging(value);
                    this.SendPropertyChanging();
                    this._Quantité = value;
                    this.SendPropertyChanged("Quantité");
                    this.OnQuantitéChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPCommandes_PPDetailsCommandes", Storage = "_PPCommandes", ThisKey = "NoCommande", OtherKey = "NoCommande", IsForeignKey = true)]
        public PPCommandes PPCommandes
        {
            get
            {
                return this._PPCommandes.Entity;
            }
            set
            {
                PPCommandes previousValue = this._PPCommandes.Entity;
                if (((previousValue != value)
                            || (this._PPCommandes.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPCommandes.Entity = null;
                        previousValue.PPDetailsCommandes.Remove(this);
                    }
                    this._PPCommandes.Entity = value;
                    if ((value != null))
                    {
                        value.PPDetailsCommandes.Add(this);
                        this._NoCommande = value.NoCommande;
                    }
                    else
                    {
                        this._NoCommande = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPCommandes");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPProduits_PPDetailsCommandes", Storage = "_PPProduits", ThisKey = "NoProduit", OtherKey = "NoProduit", IsForeignKey = true)]
        public PPProduits PPProduits
        {
            get
            {
                return this._PPProduits.Entity;
            }
            set
            {
                PPProduits previousValue = this._PPProduits.Entity;
                if (((previousValue != value)
                            || (this._PPProduits.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPProduits.Entity = null;
                        previousValue.PPDetailsCommandes.Remove(this);
                    }
                    this._PPProduits.Entity = value;
                    if ((value != null))
                    {
                        value.PPDetailsCommandes.Add(this);
                        this._NoProduit = value.NoProduit;
                    }
                    else
                    {
                        this._NoProduit = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPProduits");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPPoidsLivraisons")]
    public partial class PPPoidsLivraisons : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private short _CodeLivraison;

        private short _CodePoids;

        private System.Nullable<decimal> _Tarif;

        private EntityRef<PPTypesLivraison> _PPTypesLivraison;

        private EntityRef<PPTypesPoids> _PPTypesPoids;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCodeLivraisonChanging(short value);
        partial void OnCodeLivraisonChanged();
        partial void OnCodePoidsChanging(short value);
        partial void OnCodePoidsChanged();
        partial void OnTarifChanging(System.Nullable<decimal> value);
        partial void OnTarifChanged();
        #endregion

        public PPPoidsLivraisons()
        {
            this._PPTypesLivraison = default(EntityRef<PPTypesLivraison>);
            this._PPTypesPoids = default(EntityRef<PPTypesPoids>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodeLivraison", DbType = "SmallInt NOT NULL", IsPrimaryKey = true)]
        public short CodeLivraison
        {
            get
            {
                return this._CodeLivraison;
            }
            set
            {
                if ((this._CodeLivraison != value))
                {
                    if (this._PPTypesLivraison.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnCodeLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._CodeLivraison = value;
                    this.SendPropertyChanged("CodeLivraison");
                    this.OnCodeLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodePoids", DbType = "SmallInt NOT NULL", IsPrimaryKey = true)]
        public short CodePoids
        {
            get
            {
                return this._CodePoids;
            }
            set
            {
                if ((this._CodePoids != value))
                {
                    if (this._PPTypesPoids.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnCodePoidsChanging(value);
                    this.SendPropertyChanging();
                    this._CodePoids = value;
                    this.SendPropertyChanged("CodePoids");
                    this.OnCodePoidsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tarif", DbType = "SmallMoney")]
        public System.Nullable<decimal> Tarif
        {
            get
            {
                return this._Tarif;
            }
            set
            {
                if ((this._Tarif != value))
                {
                    this.OnTarifChanging(value);
                    this.SendPropertyChanging();
                    this._Tarif = value;
                    this.SendPropertyChanged("Tarif");
                    this.OnTarifChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPTypesLivraison_PPPoidsLivraisons", Storage = "_PPTypesLivraison", ThisKey = "CodeLivraison", OtherKey = "CodeLivraison", IsForeignKey = true)]
        public PPTypesLivraison PPTypesLivraison
        {
            get
            {
                return this._PPTypesLivraison.Entity;
            }
            set
            {
                PPTypesLivraison previousValue = this._PPTypesLivraison.Entity;
                if (((previousValue != value)
                            || (this._PPTypesLivraison.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPTypesLivraison.Entity = null;
                        previousValue.PPPoidsLivraisons.Remove(this);
                    }
                    this._PPTypesLivraison.Entity = value;
                    if ((value != null))
                    {
                        value.PPPoidsLivraisons.Add(this);
                        this._CodeLivraison = value.CodeLivraison;
                    }
                    else
                    {
                        this._CodeLivraison = default(short);
                    }
                    this.SendPropertyChanged("PPTypesLivraison");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPTypesPoids_PPPoidsLivraisons", Storage = "_PPTypesPoids", ThisKey = "CodePoids", OtherKey = "CodePoids", IsForeignKey = true)]
        public PPTypesPoids PPTypesPoids
        {
            get
            {
                return this._PPTypesPoids.Entity;
            }
            set
            {
                PPTypesPoids previousValue = this._PPTypesPoids.Entity;
                if (((previousValue != value)
                            || (this._PPTypesPoids.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPTypesPoids.Entity = null;
                        previousValue.PPPoidsLivraisons.Remove(this);
                    }
                    this._PPTypesPoids.Entity = value;
                    if ((value != null))
                    {
                        value.PPPoidsLivraisons.Add(this);
                        this._CodePoids = value.CodePoids;
                    }
                    else
                    {
                        this._CodePoids = default(short);
                    }
                    this.SendPropertyChanged("PPTypesPoids");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPHistoriquePaiements")]
    public partial class PPHistoriquePaiements : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoHistorique;

        private System.Nullable<decimal> _MontantVenteAvantLivraison;

        private System.Nullable<long> _NoVendeur;

        private System.Nullable<long> _NoClient;

        private System.Nullable<long> _NoCommande;

        private System.Nullable<System.DateTime> _DateVente;

        private string _NoAutorisation;

        private System.Nullable<decimal> _FraisLesi;

        private System.Nullable<decimal> _Redevance;

        private System.Nullable<decimal> _FraisLivraison;

        private System.Nullable<decimal> _FraisTPS;

        private System.Nullable<decimal> _FraisTVQ;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoHistoriqueChanging(long value);
        partial void OnNoHistoriqueChanged();
        partial void OnMontantVenteAvantLivraisonChanging(System.Nullable<decimal> value);
        partial void OnMontantVenteAvantLivraisonChanged();
        partial void OnNoVendeurChanging(System.Nullable<long> value);
        partial void OnNoVendeurChanged();
        partial void OnNoClientChanging(System.Nullable<long> value);
        partial void OnNoClientChanged();
        partial void OnNoCommandeChanging(System.Nullable<long> value);
        partial void OnNoCommandeChanged();
        partial void OnDateVenteChanging(System.Nullable<System.DateTime> value);
        partial void OnDateVenteChanged();
        partial void OnNoAutorisationChanging(string value);
        partial void OnNoAutorisationChanged();
        partial void OnFraisLesiChanging(System.Nullable<decimal> value);
        partial void OnFraisLesiChanged();
        partial void OnRedevanceChanging(System.Nullable<decimal> value);
        partial void OnRedevanceChanged();
        partial void OnFraisLivraisonChanging(System.Nullable<decimal> value);
        partial void OnFraisLivraisonChanged();
        partial void OnFraisTPSChanging(System.Nullable<decimal> value);
        partial void OnFraisTPSChanged();
        partial void OnFraisTVQChanging(System.Nullable<decimal> value);
        partial void OnFraisTVQChanged();
        #endregion

        public PPHistoriquePaiements()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoHistorique", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoHistorique
        {
            get
            {
                return this._NoHistorique;
            }
            set
            {
                if ((this._NoHistorique != value))
                {
                    this.OnNoHistoriqueChanging(value);
                    this.SendPropertyChanging();
                    this._NoHistorique = value;
                    this.SendPropertyChanged("NoHistorique");
                    this.OnNoHistoriqueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MontantVenteAvantLivraison", DbType = "SmallMoney")]
        public System.Nullable<decimal> MontantVenteAvantLivraison
        {
            get
            {
                return this._MontantVenteAvantLivraison;
            }
            set
            {
                if ((this._MontantVenteAvantLivraison != value))
                {
                    this.OnMontantVenteAvantLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._MontantVenteAvantLivraison = value;
                    this.SendPropertyChanged("MontantVenteAvantLivraison");
                    this.OnMontantVenteAvantLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoVendeur", DbType = "BigInt")]
        public System.Nullable<long> NoVendeur
        {
            get
            {
                return this._NoVendeur;
            }
            set
            {
                if ((this._NoVendeur != value))
                {
                    this.OnNoVendeurChanging(value);
                    this.SendPropertyChanging();
                    this._NoVendeur = value;
                    this.SendPropertyChanged("NoVendeur");
                    this.OnNoVendeurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoClient", DbType = "BigInt")]
        public System.Nullable<long> NoClient
        {
            get
            {
                return this._NoClient;
            }
            set
            {
                if ((this._NoClient != value))
                {
                    this.OnNoClientChanging(value);
                    this.SendPropertyChanging();
                    this._NoClient = value;
                    this.SendPropertyChanged("NoClient");
                    this.OnNoClientChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoCommande", DbType = "BigInt")]
        public System.Nullable<long> NoCommande
        {
            get
            {
                return this._NoCommande;
            }
            set
            {
                if ((this._NoCommande != value))
                {
                    this.OnNoCommandeChanging(value);
                    this.SendPropertyChanging();
                    this._NoCommande = value;
                    this.SendPropertyChanged("NoCommande");
                    this.OnNoCommandeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateVente", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateVente
        {
            get
            {
                return this._DateVente;
            }
            set
            {
                if ((this._DateVente != value))
                {
                    this.OnDateVenteChanging(value);
                    this.SendPropertyChanging();
                    this._DateVente = value;
                    this.SendPropertyChanged("DateVente");
                    this.OnDateVenteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoAutorisation", DbType = "VarChar(50)")]
        public string NoAutorisation
        {
            get
            {
                return this._NoAutorisation;
            }
            set
            {
                if ((this._NoAutorisation != value))
                {
                    this.OnNoAutorisationChanging(value);
                    this.SendPropertyChanging();
                    this._NoAutorisation = value;
                    this.SendPropertyChanged("NoAutorisation");
                    this.OnNoAutorisationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FraisLesi", DbType = "SmallMoney")]
        public System.Nullable<decimal> FraisLesi
        {
            get
            {
                return this._FraisLesi;
            }
            set
            {
                if ((this._FraisLesi != value))
                {
                    this.OnFraisLesiChanging(value);
                    this.SendPropertyChanging();
                    this._FraisLesi = value;
                    this.SendPropertyChanged("FraisLesi");
                    this.OnFraisLesiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Redevance", DbType = "SmallMoney")]
        public System.Nullable<decimal> Redevance
        {
            get
            {
                return this._Redevance;
            }
            set
            {
                if ((this._Redevance != value))
                {
                    this.OnRedevanceChanging(value);
                    this.SendPropertyChanging();
                    this._Redevance = value;
                    this.SendPropertyChanged("Redevance");
                    this.OnRedevanceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FraisLivraison", DbType = "SmallMoney")]
        public System.Nullable<decimal> FraisLivraison
        {
            get
            {
                return this._FraisLivraison;
            }
            set
            {
                if ((this._FraisLivraison != value))
                {
                    this.OnFraisLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._FraisLivraison = value;
                    this.SendPropertyChanged("FraisLivraison");
                    this.OnFraisLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FraisTPS", DbType = "SmallMoney")]
        public System.Nullable<decimal> FraisTPS
        {
            get
            {
                return this._FraisTPS;
            }
            set
            {
                if ((this._FraisTPS != value))
                {
                    this.OnFraisTPSChanging(value);
                    this.SendPropertyChanging();
                    this._FraisTPS = value;
                    this.SendPropertyChanged("FraisTPS");
                    this.OnFraisTPSChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FraisTVQ", DbType = "SmallMoney")]
        public System.Nullable<decimal> FraisTVQ
        {
            get
            {
                return this._FraisTVQ;
            }
            set
            {
                if ((this._FraisTVQ != value))
                {
                    this.OnFraisTVQChanging(value);
                    this.SendPropertyChanging();
                    this._FraisTVQ = value;
                    this.SendPropertyChanged("FraisTVQ");
                    this.OnFraisTVQChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPProduits")]
    public partial class PPProduits : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoProduit;

        private System.Nullable<long> _NoVendeur;

        private System.Nullable<int> _NoCategorie;

        private string _Nom;

        [Required(ErrorMessage = "Vous devez saisie une descrption de produit.")]
        private string _Description;

        private string _Photo;

        [Required]
        private System.Nullable<decimal> _PrixDemande;

        [Required]
        private System.Nullable<short> _NombreItems;

        private System.Nullable<bool> _Disponibilité;


        private System.Nullable<System.DateTime> _DateVente;


        private System.Nullable<decimal> _PrixVente;

        [Required]
        private System.Nullable<decimal> _Poids;


        private System.Nullable<System.DateTime> _DateCreation;

        private System.Nullable<System.DateTime> _DateMAJ;

        private EntitySet<PPArticlesEnPanier> _PPArticlesEnPanier;

        private EntitySet<PPDetailsCommandes> _PPDetailsCommandes;

        private EntityRef<PPCategories> _PPCategories;

        private EntityRef<PPVendeurs> _PPVendeurs;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoProduitChanging(long value);
        partial void OnNoProduitChanged();
        partial void OnNoVendeurChanging(System.Nullable<long> value);
        partial void OnNoVendeurChanged();
        partial void OnNoCategorieChanging(System.Nullable<int> value);
        partial void OnNoCategorieChanged();
        partial void OnNomChanging(string value);
        partial void OnNomChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnPhotoChanging(string value);
        partial void OnPhotoChanged();
        partial void OnPrixDemandeChanging(System.Nullable<decimal> value);
        partial void OnPrixDemandeChanged();
        partial void OnNombreItemsChanging(System.Nullable<short> value);
        partial void OnNombreItemsChanged();
        partial void OnDisponibilitéChanging(System.Nullable<bool> value);
        partial void OnDisponibilitéChanged();
        partial void OnDateVenteChanging(System.Nullable<System.DateTime> value);
        partial void OnDateVenteChanged();
        partial void OnPrixVenteChanging(System.Nullable<decimal> value);
        partial void OnPrixVenteChanged();
        partial void OnPoidsChanging(System.Nullable<decimal> value);
        partial void OnPoidsChanged();
        partial void OnDateCreationChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreationChanged();
        partial void OnDateMAJChanging(System.Nullable<System.DateTime> value);
        partial void OnDateMAJChanged();
        #endregion

        public PPProduits()
        {
            this._PPArticlesEnPanier = new EntitySet<PPArticlesEnPanier>(new Action<PPArticlesEnPanier>(this.attach_PPArticlesEnPanier), new Action<PPArticlesEnPanier>(this.detach_PPArticlesEnPanier));
            this._PPDetailsCommandes = new EntitySet<PPDetailsCommandes>(new Action<PPDetailsCommandes>(this.attach_PPDetailsCommandes), new Action<PPDetailsCommandes>(this.detach_PPDetailsCommandes));
            this._PPCategories = default(EntityRef<PPCategories>);
            this._PPVendeurs = default(EntityRef<PPVendeurs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoProduit", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoProduit
        {
            get
            {
                return this._NoProduit;
            }
            set
            {
                if ((this._NoProduit != value))
                {
                    this.OnNoProduitChanging(value);
                    this.SendPropertyChanging();
                    this._NoProduit = value;
                    this.SendPropertyChanged("NoProduit");
                    this.OnNoProduitChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoVendeur", DbType = "BigInt")]
        public System.Nullable<long> NoVendeur
        {
            get
            {
                return this._NoVendeur;
            }
            set
            {
                if ((this._NoVendeur != value))
                {
                    if (this._PPVendeurs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoVendeurChanging(value);
                    this.SendPropertyChanging();
                    this._NoVendeur = value;
                    this.SendPropertyChanged("NoVendeur");
                    this.OnNoVendeurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoCategorie", DbType = "Int")]
        public System.Nullable<int> NoCategorie
        {
            get
            {
                return this._NoCategorie;
            }
            set
            {
                if ((this._NoCategorie != value))
                {
                    if (this._PPCategories.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoCategorieChanging(value);
                    this.SendPropertyChanging();
                    this._NoCategorie = value;
                    this.SendPropertyChanged("NoCategorie");
                    this.OnNoCategorieChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nom", DbType = "VarChar(50)")]

        [StringLength(60, MinimumLength = 3, ErrorMessage = "Le nom de produit doit etre entre 3 et 50 caractères")]
        [Required(ErrorMessage = "Vous devez saisir un nom de produit.")]
        public string Nom
        {
            get
            {
                return this._Nom;
            }
            set
            {
                if ((this._Nom != value))
                {
                    this.OnNomChanging(value);
                    this.SendPropertyChanging();
                    this._Nom = value;
                    this.SendPropertyChanged("Nom");
                    this.OnNomChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(MAX)")]
        [Required(ErrorMessage = "Vous devez saisir une description.")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Photo", DbType = "VarChar(50)")]
        public string Photo
        {
            get
            {
                return this._Photo;
            }
            set
            {
                if ((this._Photo != value))
                {
                    this.OnPhotoChanging(value);
                    this.SendPropertyChanging();
                    this._Photo = value;
                    this.SendPropertyChanged("Photo");
                    this.OnPhotoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PrixDemande", DbType = "SmallMoney")]
        [Required(ErrorMessage = "Vous devez saisir le prix demandé.")]
        public System.Nullable<decimal> PrixDemande
        {
            get
            {
                return this._PrixDemande;
            }
            set
            {
                if ((this._PrixDemande != value))
                {
                    this.OnPrixDemandeChanging(value);
                    this.SendPropertyChanging();
                    this._PrixDemande = value;
                    this.SendPropertyChanged("PrixDemande");
                    this.OnPrixDemandeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NombreItems", DbType = "SmallInt")]
        [Required(ErrorMessage = "Vous devez saisir le nombre(s) d'items disponibles.")]
        public System.Nullable<short> NombreItems
        {
            get
            {
                return this._NombreItems;
            }
            set
            {
                if ((this._NombreItems != value))
                {
                    this.OnNombreItemsChanging(value);
                    this.SendPropertyChanging();
                    this._NombreItems = value;
                    this.SendPropertyChanged("NombreItems");
                    this.OnNombreItemsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Disponibilité", DbType = "Bit")]
        public System.Nullable<bool> Disponibilité
        {
            get
            {
                return this._Disponibilité;
            }
            set
            {
                if ((this._Disponibilité != value))
                {
                    this.OnDisponibilitéChanging(value);
                    this.SendPropertyChanging();
                    this._Disponibilité = value;
                    this.SendPropertyChanged("Disponibilité");
                    this.OnDisponibilitéChanged();
                }
            }
        }


      [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateVente", DbType = "SmallDateTime")]
      [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:yyyy/MM/dd}", ApplyFormatInEditMode = true)]
      [ValidationDateVente(ErrorMessage = "La date doit être supérieur à la date du jour.")]
        public System.Nullable<System.DateTime> DateVente
        {
            get
            {
                return this._DateVente;
            }
            set
            {
                if ((this._DateVente != value))
                {
                    this.OnDateVenteChanging(value);
                    this.SendPropertyChanging();
                    this._DateVente = value;
                    this.SendPropertyChanged("DateVente");
                    this.OnDateVenteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PrixVente", DbType = "SmallMoney")]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:N}")]
        public System.Nullable<decimal> PrixVente
        {
            get
            {
                return this._PrixVente;
            }
            set
            {
                if ((this._PrixVente != value))
                {
                    this.OnPrixVenteChanging(value);
                    this.SendPropertyChanging();
                    this._PrixVente = value;
                    this.SendPropertyChanged("PrixVente");
                    this.OnPrixVenteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Poids", DbType = "Decimal(8,1)")]
        [Required(ErrorMessage = "Vous devez saisir le poid du produit")]
        public System.Nullable<decimal> Poids
        {
            get
            {
                return this._Poids;
            }
            set
            {
                if ((this._Poids != value))
                {
                    this.OnPoidsChanging(value);
                    this.SendPropertyChanging();
                    this._Poids = value;
                    this.SendPropertyChanged("Poids");
                    this.OnPoidsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateCreation", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateCreation
        {
            get
            {
                return this._DateCreation;
            }
            set
            {
                if ((this._DateCreation != value))
                {
                    this.OnDateCreationChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreation = value;
                    this.SendPropertyChanged("DateCreation");
                    this.OnDateCreationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateMAJ", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateMAJ
        {
            get
            {
                return this._DateMAJ;
            }
            set
            {
                if ((this._DateMAJ != value))
                {
                    this.OnDateMAJChanging(value);
                    this.SendPropertyChanging();
                    this._DateMAJ = value;
                    this.SendPropertyChanged("DateMAJ");
                    this.OnDateMAJChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPProduits_PPArticlesEnPanier", Storage = "_PPArticlesEnPanier", ThisKey = "NoProduit", OtherKey = "NoProduit")]
        public EntitySet<PPArticlesEnPanier> PPArticlesEnPanier
        {
            get
            {
                return this._PPArticlesEnPanier;
            }
            set
            {
                this._PPArticlesEnPanier.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPProduits_PPDetailsCommandes", Storage = "_PPDetailsCommandes", ThisKey = "NoProduit", OtherKey = "NoProduit")]
        public EntitySet<PPDetailsCommandes> PPDetailsCommandes
        {
            get
            {
                return this._PPDetailsCommandes;
            }
            set
            {
                this._PPDetailsCommandes.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPCategories_PPProduits", Storage = "_PPCategories", ThisKey = "NoCategorie", OtherKey = "NoCategorie", IsForeignKey = true)]
        public PPCategories PPCategories
        {
            get
            {
                return this._PPCategories.Entity;
            }
            set
            {
                PPCategories previousValue = this._PPCategories.Entity;
                if (((previousValue != value)
                            || (this._PPCategories.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPCategories.Entity = null;
                        previousValue.PPProduits.Remove(this);
                    }
                    this._PPCategories.Entity = value;
                    if ((value != null))
                    {
                        value.PPProduits.Add(this);
                        this._NoCategorie = value.NoCategorie;
                    }
                    else
                    {
                        this._NoCategorie = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("PPCategories");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPProduits", Storage = "_PPVendeurs", ThisKey = "NoVendeur", OtherKey = "NoVendeur", IsForeignKey = true)]
        public PPVendeurs PPVendeurs
        {
            get
            {
                return this._PPVendeurs.Entity;
            }
            set
            {
                PPVendeurs previousValue = this._PPVendeurs.Entity;
                if (((previousValue != value)
                            || (this._PPVendeurs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPVendeurs.Entity = null;
                        previousValue.PPProduits.Remove(this);
                    }
                    this._PPVendeurs.Entity = value;
                    if ((value != null))
                    {
                        value.PPProduits.Add(this);
                        this._NoVendeur = value.NoVendeur;
                    }
                    else
                    {
                        this._NoVendeur = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("PPVendeurs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPArticlesEnPanier(PPArticlesEnPanier entity)
        {
            this.SendPropertyChanging();
            entity.PPProduits = this;
        }

        private void detach_PPArticlesEnPanier(PPArticlesEnPanier entity)
        {
            this.SendPropertyChanging();
            entity.PPProduits = null;
        }

        private void attach_PPDetailsCommandes(PPDetailsCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPProduits = this;
        }

        private void detach_PPDetailsCommandes(PPDetailsCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPProduits = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPTaxeFederale")]
    public partial class PPTaxeFederale : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private byte _NoTPS;

        private System.Nullable<System.DateTime> _DateEffectiveTPS;

        private System.Nullable<decimal> _TauxTPS;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoTPSChanging(byte value);
        partial void OnNoTPSChanged();
        partial void OnDateEffectiveTPSChanging(System.Nullable<System.DateTime> value);
        partial void OnDateEffectiveTPSChanged();
        partial void OnTauxTPSChanging(System.Nullable<decimal> value);
        partial void OnTauxTPSChanged();
        #endregion

        public PPTaxeFederale()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoTPS", DbType = "TinyInt NOT NULL", IsPrimaryKey = true)]
        public byte NoTPS
        {
            get
            {
                return this._NoTPS;
            }
            set
            {
                if ((this._NoTPS != value))
                {
                    this.OnNoTPSChanging(value);
                    this.SendPropertyChanging();
                    this._NoTPS = value;
                    this.SendPropertyChanged("NoTPS");
                    this.OnNoTPSChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateEffectiveTPS", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateEffectiveTPS
        {
            get
            {
                return this._DateEffectiveTPS;
            }
            set
            {
                if ((this._DateEffectiveTPS != value))
                {
                    this.OnDateEffectiveTPSChanging(value);
                    this.SendPropertyChanging();
                    this._DateEffectiveTPS = value;
                    this.SendPropertyChanged("DateEffectiveTPS");
                    this.OnDateEffectiveTPSChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TauxTPS", DbType = "Decimal(4,2)")]
        public System.Nullable<decimal> TauxTPS
        {
            get
            {
                return this._TauxTPS;
            }
            set
            {
                if ((this._TauxTPS != value))
                {
                    this.OnTauxTPSChanging(value);
                    this.SendPropertyChanging();
                    this._TauxTPS = value;
                    this.SendPropertyChanged("TauxTPS");
                    this.OnTauxTPSChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPTaxeProvinciale")]
    public partial class PPTaxeProvinciale : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private byte _NoTVQ;

        private System.Nullable<System.DateTime> _DateEffectiveTVQ;

        private System.Nullable<decimal> _TauxTVQ;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoTVQChanging(byte value);
        partial void OnNoTVQChanged();
        partial void OnDateEffectiveTVQChanging(System.Nullable<System.DateTime> value);
        partial void OnDateEffectiveTVQChanged();
        partial void OnTauxTVQChanging(System.Nullable<decimal> value);
        partial void OnTauxTVQChanged();
        #endregion

        public PPTaxeProvinciale()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoTVQ", DbType = "TinyInt NOT NULL", IsPrimaryKey = true)]
        public byte NoTVQ
        {
            get
            {
                return this._NoTVQ;
            }
            set
            {
                if ((this._NoTVQ != value))
                {
                    this.OnNoTVQChanging(value);
                    this.SendPropertyChanging();
                    this._NoTVQ = value;
                    this.SendPropertyChanged("NoTVQ");
                    this.OnNoTVQChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateEffectiveTVQ", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateEffectiveTVQ
        {
            get
            {
                return this._DateEffectiveTVQ;
            }
            set
            {
                if ((this._DateEffectiveTVQ != value))
                {
                    this.OnDateEffectiveTVQChanging(value);
                    this.SendPropertyChanging();
                    this._DateEffectiveTVQ = value;
                    this.SendPropertyChanged("DateEffectiveTVQ");
                    this.OnDateEffectiveTVQChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TauxTVQ", DbType = "Decimal(5,3)")]
        public System.Nullable<decimal> TauxTVQ
        {
            get
            {
                return this._TauxTVQ;
            }
            set
            {
                if ((this._TauxTVQ != value))
                {
                    this.OnTauxTVQChanging(value);
                    this.SendPropertyChanging();
                    this._TauxTVQ = value;
                    this.SendPropertyChanged("TauxTVQ");
                    this.OnTauxTVQChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPTypesLivraison")]
    public partial class PPTypesLivraison : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private short _CodeLivraison;

        private string _Description;

        private EntitySet<PPCommandes> _PPCommandes;

        private EntitySet<PPPoidsLivraisons> _PPPoidsLivraisons;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCodeLivraisonChanging(short value);
        partial void OnCodeLivraisonChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public PPTypesLivraison()
        {
            this._PPCommandes = new EntitySet<PPCommandes>(new Action<PPCommandes>(this.attach_PPCommandes), new Action<PPCommandes>(this.detach_PPCommandes));
            this._PPPoidsLivraisons = new EntitySet<PPPoidsLivraisons>(new Action<PPPoidsLivraisons>(this.attach_PPPoidsLivraisons), new Action<PPPoidsLivraisons>(this.detach_PPPoidsLivraisons));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodeLivraison", DbType = "SmallInt NOT NULL", IsPrimaryKey = true)]
        public short CodeLivraison
        {
            get
            {
                return this._CodeLivraison;
            }
            set
            {
                if ((this._CodeLivraison != value))
                {
                    this.OnCodeLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._CodeLivraison = value;
                    this.SendPropertyChanged("CodeLivraison");
                    this.OnCodeLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(50)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPTypesLivraison_PPCommandes", Storage = "_PPCommandes", ThisKey = "CodeLivraison", OtherKey = "TypeLivraison")]
        public EntitySet<PPCommandes> PPCommandes
        {
            get
            {
                return this._PPCommandes;
            }
            set
            {
                this._PPCommandes.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPTypesLivraison_PPPoidsLivraisons", Storage = "_PPPoidsLivraisons", ThisKey = "CodeLivraison", OtherKey = "CodeLivraison")]
        public EntitySet<PPPoidsLivraisons> PPPoidsLivraisons
        {
            get
            {
                return this._PPPoidsLivraisons;
            }
            set
            {
                this._PPPoidsLivraisons.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPCommandes(PPCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPTypesLivraison = this;
        }

        private void detach_PPCommandes(PPCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPTypesLivraison = null;
        }

        private void attach_PPPoidsLivraisons(PPPoidsLivraisons entity)
        {
            this.SendPropertyChanging();
            entity.PPTypesLivraison = this;
        }

        private void detach_PPPoidsLivraisons(PPPoidsLivraisons entity)
        {
            this.SendPropertyChanging();
            entity.PPTypesLivraison = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPTypesPoids")]
    public partial class PPTypesPoids : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private short _CodePoids;

        private System.Nullable<decimal> _PoidsMin;

        private System.Nullable<decimal> _PoidsMax;

        private EntitySet<PPPoidsLivraisons> _PPPoidsLivraisons;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCodePoidsChanging(short value);
        partial void OnCodePoidsChanged();
        partial void OnPoidsMinChanging(System.Nullable<decimal> value);
        partial void OnPoidsMinChanged();
        partial void OnPoidsMaxChanging(System.Nullable<decimal> value);
        partial void OnPoidsMaxChanged();
        #endregion

        public PPTypesPoids()
        {
            this._PPPoidsLivraisons = new EntitySet<PPPoidsLivraisons>(new Action<PPPoidsLivraisons>(this.attach_PPPoidsLivraisons), new Action<PPPoidsLivraisons>(this.detach_PPPoidsLivraisons));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodePoids", DbType = "SmallInt NOT NULL", IsPrimaryKey = true)]
        public short CodePoids
        {
            get
            {
                return this._CodePoids;
            }
            set
            {
                if ((this._CodePoids != value))
                {
                    this.OnCodePoidsChanging(value);
                    this.SendPropertyChanging();
                    this._CodePoids = value;
                    this.SendPropertyChanged("CodePoids");
                    this.OnCodePoidsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoidsMin", DbType = "Decimal(8,1)")]
        public System.Nullable<decimal> PoidsMin
        {
            get
            {
                return this._PoidsMin;
            }
            set
            {
                if ((this._PoidsMin != value))
                {
                    this.OnPoidsMinChanging(value);
                    this.SendPropertyChanging();
                    this._PoidsMin = value;
                    this.SendPropertyChanged("PoidsMin");
                    this.OnPoidsMinChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoidsMax", DbType = "Decimal(8,1)")]
        public System.Nullable<decimal> PoidsMax
        {
            get
            {
                return this._PoidsMax;
            }
            set
            {
                if ((this._PoidsMax != value))
                {
                    this.OnPoidsMaxChanging(value);
                    this.SendPropertyChanging();
                    this._PoidsMax = value;
                    this.SendPropertyChanged("PoidsMax");
                    this.OnPoidsMaxChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPTypesPoids_PPPoidsLivraisons", Storage = "_PPPoidsLivraisons", ThisKey = "CodePoids", OtherKey = "CodePoids")]
        public EntitySet<PPPoidsLivraisons> PPPoidsLivraisons
        {
            get
            {
                return this._PPPoidsLivraisons;
            }
            set
            {
                this._PPPoidsLivraisons.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPPoidsLivraisons(PPPoidsLivraisons entity)
        {
            this.SendPropertyChanging();
            entity.PPTypesPoids = this;
        }

        private void detach_PPPoidsLivraisons(PPPoidsLivraisons entity)
        {
            this.SendPropertyChanging();
            entity.PPTypesPoids = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPVendeurs")]
    public partial class PPVendeurs : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoVendeur;

        private string _NomAffaires;

        private string _Nom;

        private string _Prenom;

        private string _Rue;

        private string _Ville;

        private string _Province;

        private string _CodePostal;

        private string _Pays;

        private string _Tel1;

        private string _Tel2;

        private string _AdresseEmail;

        private string _MotDePasse;

        private System.Nullable<int> _PoidsMaxLivraison;

        private System.Nullable<decimal> _LivraisonGratuite;

        private System.Nullable<bool> _Taxes;

        private System.Nullable<decimal> _Pourcentage;

        private string _Configuration;

        private System.Nullable<System.DateTime> _DateCreation;

        private System.Nullable<System.DateTime> _DateMAJ;

        private System.Nullable<short> _Statut;

        private EntitySet<PPArticlesEnPanier> _PPArticlesEnPanier;

        private EntitySet<PPCommandes> _PPCommandes;

        private EntitySet<PPProduits> _PPProduits;

        private EntitySet<PPVendeursClients> _PPVendeursClients;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoVendeurChanging(long value);
        partial void OnNoVendeurChanged();
        partial void OnNomAffairesChanging(string value);
        partial void OnNomAffairesChanged();
        partial void OnNomChanging(string value);
        partial void OnNomChanged();
        partial void OnPrenomChanging(string value);
        partial void OnPrenomChanged();
        partial void OnRueChanging(string value);
        partial void OnRueChanged();
        partial void OnVilleChanging(string value);
        partial void OnVilleChanged();
        partial void OnProvinceChanging(string value);
        partial void OnProvinceChanged();
        partial void OnCodePostalChanging(string value);
        partial void OnCodePostalChanged();
        partial void OnPaysChanging(string value);
        partial void OnPaysChanged();
        partial void OnTel1Changing(string value);
        partial void OnTel1Changed();
        partial void OnTel2Changing(string value);
        partial void OnTel2Changed();
        partial void OnAdresseEmailChanging(string value);
        partial void OnAdresseEmailChanged();
        partial void OnMotDePasseChanging(string value);
        partial void OnMotDePasseChanged();
        partial void OnPoidsMaxLivraisonChanging(System.Nullable<int> value);
        partial void OnPoidsMaxLivraisonChanged();
        partial void OnLivraisonGratuiteChanging(System.Nullable<decimal> value);
        partial void OnLivraisonGratuiteChanged();
        partial void OnTaxesChanging(System.Nullable<bool> value);
        partial void OnTaxesChanged();
        partial void OnPourcentageChanging(System.Nullable<decimal> value);
        partial void OnPourcentageChanged();
        partial void OnConfigurationChanging(string value);
        partial void OnConfigurationChanged();
        partial void OnDateCreationChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreationChanged();
        partial void OnDateMAJChanging(System.Nullable<System.DateTime> value);
        partial void OnDateMAJChanged();
        partial void OnStatutChanging(System.Nullable<short> value);
        partial void OnStatutChanged();
        #endregion

        public PPVendeurs()
        {
            this._PPArticlesEnPanier = new EntitySet<PPArticlesEnPanier>(new Action<PPArticlesEnPanier>(this.attach_PPArticlesEnPanier), new Action<PPArticlesEnPanier>(this.detach_PPArticlesEnPanier));
            this._PPCommandes = new EntitySet<PPCommandes>(new Action<PPCommandes>(this.attach_PPCommandes), new Action<PPCommandes>(this.detach_PPCommandes));
            this._PPProduits = new EntitySet<PPProduits>(new Action<PPProduits>(this.attach_PPProduits), new Action<PPProduits>(this.detach_PPProduits));
            this._PPVendeursClients = new EntitySet<PPVendeursClients>(new Action<PPVendeursClients>(this.attach_PPVendeursClients), new Action<PPVendeursClients>(this.detach_PPVendeursClients));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoVendeur", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoVendeur
        {
            get
            {
                return this._NoVendeur;
            }
            set
            {
                if ((this._NoVendeur != value))
                {
                    this.OnNoVendeurChanging(value);
                    this.SendPropertyChanging();
                    this._NoVendeur = value;
                    this.SendPropertyChanged("NoVendeur");
                    this.OnNoVendeurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NomAffaires", DbType = "VarChar(50)")]
        [Required(ErrorMessage = "Le champ nom d'affaires est requis.")]
        public string NomAffaires
        {
            get
            {
                return this._NomAffaires;
            }
            set
            {
                if ((this._NomAffaires != value))
                {
                    this.OnNomAffairesChanging(value);
                    this.SendPropertyChanging();
                    this._NomAffaires = value;
                    this.SendPropertyChanged("NomAffaires");
                    this.OnNomAffairesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nom", DbType = "VarChar(50)")]
        [Required(ErrorMessage = "Le champ nom est requis.")]
        [RegularExpression(@"^[\p{L}]((['\- ][\p{L}])|[\p{L}])+$", ErrorMessage = "Le champs doit contenir seulement des lettres de l'alphabet latin et les caractères <-> et <'> doivent être insérés entre des lettres.")]
        public string Nom
        {
            get
            {
                return this._Nom;
            }
            set
            {
                if ((this._Nom != value))
                {
                    this.OnNomChanging(value);
                    this.SendPropertyChanging();
                    this._Nom = value;
                    this.SendPropertyChanged("Nom");
                    this.OnNomChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Prenom", DbType = "VarChar(50)")]
        [Required(ErrorMessage = "Le champ prénom est requis.")]
        [RegularExpression(@"^[\p{L}]((['\- ][\p{L}])|[\p{L}])+$", ErrorMessage = "Le champs doit contenir seulement des lettres de l'alphabet latin et les caractères <-> et <'> doivent être insérés entre des lettres.")]
        public string Prenom
        {
            get
            {
                return this._Prenom;
            }
            set
            {
                if ((this._Prenom != value))
                {
                    this.OnPrenomChanging(value);
                    this.SendPropertyChanging();
                    this._Prenom = value;
                    this.SendPropertyChanged("Prenom");
                    this.OnPrenomChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rue", DbType = "VarChar(50)")]
        [Required(ErrorMessage = "Le champ rue est requis.")]
        public string Rue
        {
            get
            {
                return this._Rue;
            }
            set
            {
                if ((this._Rue != value))
                {
                    this.OnRueChanging(value);
                    this.SendPropertyChanging();
                    this._Rue = value;
                    this.SendPropertyChanged("Rue");
                    this.OnRueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ville", DbType = "VarChar(50)")]
        [Required(ErrorMessage = "Le champ ville est requis.")]
        public string Ville
        {
            get
            {
                return this._Ville;
            }
            set
            {
                if ((this._Ville != value))
                {
                    this.OnVilleChanging(value);
                    this.SendPropertyChanging();
                    this._Ville = value;
                    this.SendPropertyChanged("Ville");
                    this.OnVilleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Province", DbType = "Char(2)")]
        [Required(ErrorMessage = "Le champ province est requis.")]
        public string Province
        {
            get
            {
                return this._Province;
            }
            set
            {
                if ((this._Province != value))
                {
                    this.OnProvinceChanging(value);
                    this.SendPropertyChanging();
                    this._Province = value;
                    this.SendPropertyChanged("Province");
                    this.OnProvinceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodePostal", DbType = "VarChar(7)")]
        [Required(ErrorMessage = "Le champ code postal est requis.")]
        [RegularExpression("[ABCEGHJKLMNPRSTVXY][0-9][ABCEGHJKLMNPRSTVWXYZ] [0-9][ABCEGHJKLMNPRSTVWXYZ][0-9]", ErrorMessage = "Le format du champs doit être A9A 9A9.")]
        public string CodePostal
        {
            get
            {
                return this._CodePostal;
            }
            set
            {
                if ((this._CodePostal != value))
                {
                    this.OnCodePostalChanging(value);
                    this.SendPropertyChanging();
                    this._CodePostal = value;
                    this.SendPropertyChanged("CodePostal");
                    this.OnCodePostalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pays", DbType = "VarChar(10)")]
        [Required(ErrorMessage = "Le champ pays est requis.")]
        public string Pays
        {
            get
            {
                return this._Pays;
            }
            set
            {
                if ((this._Pays != value))
                {
                    this.OnPaysChanging(value);
                    this.SendPropertyChanging();
                    this._Pays = value;
                    this.SendPropertyChanged("Pays");
                    this.OnPaysChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel1", DbType = "VarChar(20)")]
        [Required(ErrorMessage = "Le champ téléphone 1 est requis.")]
        [MinLength(14, ErrorMessage = "Le numéro de téléphone 1 est invalide.")]
        [RegularExpression(@"^\(\d{3}\) \d{3}-\d{4}$", ErrorMessage = "Le champs doit contenir seulement des chiffres et respecter le format (999) 999-9999.")]
        public string Tel1
        {
            get
            {
                return this._Tel1;
            }
            set
            {
                if ((this._Tel1 != value))
                {
                    this.OnTel1Changing(value);
                    this.SendPropertyChanging();
                    this._Tel1 = value;
                    this.SendPropertyChanged("Tel1");
                    this.OnTel1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel2", DbType = "VarChar(20)")]
        [MinLength(14, ErrorMessage = "Le numéro de téléphone 2 est invalide.")]
        [RegularExpression(@"^\(\d{3}\) \d{3}-\d{4}$", ErrorMessage = "Le champs doit contenir seulement des chiffres et respecter le format (999) 999-9999.")]
        public string Tel2
        {
            get
            {
                return this._Tel2;
            }
            set
            {
                if ((this._Tel2 != value))
                {
                    this.OnTel2Changing(value);
                    this.SendPropertyChanging();
                    this._Tel2 = value;
                    this.SendPropertyChanged("Tel2");
                    this.OnTel2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdresseEmail", DbType = "VarChar(100)")]
        [Required(ErrorMessage = "Le champ courriel est requis.")]
        public string AdresseEmail
        {
            get
            {
                return this._AdresseEmail;
            }
            set
            {
                if ((this._AdresseEmail != value))
                {
                    this.OnAdresseEmailChanging(value);
                    this.SendPropertyChanging();
                    this._AdresseEmail = value;
                    this.SendPropertyChanged("AdresseEmail");
                    this.OnAdresseEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MotDePasse", DbType = "VarChar(50)")]
        [Required(ErrorMessage = "Le champ mot de passe est requis.")]
        [DataType(DataType.Password)]
        public string MotDePasse
        {
            get
            {
                return this._MotDePasse;
            }
            set
            {
                if ((this._MotDePasse != value))
                {
                    this.OnMotDePasseChanging(value);
                    this.SendPropertyChanging();
                    this._MotDePasse = value;
                    this.SendPropertyChanged("MotDePasse");
                    this.OnMotDePasseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoidsMaxLivraison", DbType = "Int")]
        [Required(ErrorMessage = "Le champ poids max livraison est requis.")]
        [Range(0, 999999, ErrorMessage = "La valeur du champs doit être entre 0.1 à 999999.9")]
        public System.Nullable<int> PoidsMaxLivraison
        {
            get
            {
                return this._PoidsMaxLivraison;
            }
            set
            {
                if ((this._PoidsMaxLivraison != value))
                {
                    this.OnPoidsMaxLivraisonChanging(value);
                    this.SendPropertyChanging();
                    this._PoidsMaxLivraison = value;
                    this.SendPropertyChanged("PoidsMaxLivraison");
                    this.OnPoidsMaxLivraisonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LivraisonGratuite", DbType = "SmallMoney")]
        [Required(ErrorMessage = "Le champ livraison gratuite est requis.")]
        [DisplayFormat(DataFormatString = "{0:C}")]
        public System.Nullable<decimal> LivraisonGratuite
        {
            get
            {
                return this._LivraisonGratuite;
            }
            set
            {
                if ((this._LivraisonGratuite != value))
                {
                    this.OnLivraisonGratuiteChanging(value);
                    this.SendPropertyChanging();
                    this._LivraisonGratuite = value;
                    this.SendPropertyChanged("LivraisonGratuite");
                    this.OnLivraisonGratuiteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Taxes", DbType = "Bit")]
        [Required(ErrorMessage = "Le champ taxes est requis.")]
        public System.Nullable<bool> Taxes
        {
            get
            {
                return this._Taxes;
            }
            set
            {
                if ((this._Taxes != value))
                {
                    this.OnTaxesChanging(value);
                    this.SendPropertyChanging();
                    this._Taxes = value;
                    this.SendPropertyChanged("Taxes");
                    this.OnTaxesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pourcentage", DbType = "Decimal(4,2)")]
        public System.Nullable<decimal> Pourcentage
        {
            get
            {
                return this._Pourcentage;
            }
            set
            {
                if ((this._Pourcentage != value))
                {
                    this.OnPourcentageChanging(value);
                    this.SendPropertyChanging();
                    this._Pourcentage = value;
                    this.SendPropertyChanged("Pourcentage");
                    this.OnPourcentageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Configuration", DbType = "VarChar(512)")]
        public string Configuration
        {
            get
            {
                return this._Configuration;
            }
            set
            {
                if ((this._Configuration != value))
                {
                    this.OnConfigurationChanging(value);
                    this.SendPropertyChanging();
                    this._Configuration = value;
                    this.SendPropertyChanged("Configuration");
                    this.OnConfigurationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateCreation", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateCreation
        {
            get
            {
                return this._DateCreation;
            }
            set
            {
                if ((this._DateCreation != value))
                {
                    this.OnDateCreationChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreation = value;
                    this.SendPropertyChanged("DateCreation");
                    this.OnDateCreationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateMAJ", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateMAJ
        {
            get
            {
                return this._DateMAJ;
            }
            set
            {
                if ((this._DateMAJ != value))
                {
                    this.OnDateMAJChanging(value);
                    this.SendPropertyChanging();
                    this._DateMAJ = value;
                    this.SendPropertyChanged("DateMAJ");
                    this.OnDateMAJChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Statut", DbType = "SmallInt")]
        public System.Nullable<short> Statut
        {
            get
            {
                return this._Statut;
            }
            set
            {
                if ((this._Statut != value))
                {
                    this.OnStatutChanging(value);
                    this.SendPropertyChanging();
                    this._Statut = value;
                    this.SendPropertyChanged("Statut");
                    this.OnStatutChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPArticlesEnPanier", Storage = "_PPArticlesEnPanier", ThisKey = "NoVendeur", OtherKey = "NoVendeur")]
        public EntitySet<PPArticlesEnPanier> PPArticlesEnPanier
        {
            get
            {
                return this._PPArticlesEnPanier;
            }
            set
            {
                this._PPArticlesEnPanier.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPCommandes", Storage = "_PPCommandes", ThisKey = "NoVendeur", OtherKey = "NoVendeur")]
        public EntitySet<PPCommandes> PPCommandes
        {
            get
            {
                return this._PPCommandes;
            }
            set
            {
                this._PPCommandes.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPProduits", Storage = "_PPProduits", ThisKey = "NoVendeur", OtherKey = "NoVendeur")]
        public EntitySet<PPProduits> PPProduits
        {
            get
            {
                return this._PPProduits;
            }
            set
            {
                this._PPProduits.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPVendeursClients", Storage = "_PPVendeursClients", ThisKey = "NoVendeur", OtherKey = "NoVendeur")]
        public EntitySet<PPVendeursClients> PPVendeursClients
        {
            get
            {
                return this._PPVendeursClients;
            }
            set
            {
                this._PPVendeursClients.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPArticlesEnPanier(PPArticlesEnPanier entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = this;
        }

        private void detach_PPArticlesEnPanier(PPArticlesEnPanier entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = null;
        }

        private void attach_PPCommandes(PPCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = this;
        }

        private void detach_PPCommandes(PPCommandes entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = null;
        }

        private void attach_PPProduits(PPProduits entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = this;
        }

        private void detach_PPProduits(PPProduits entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = null;
        }

        private void attach_PPVendeursClients(PPVendeursClients entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = this;
        }

        private void detach_PPVendeursClients(PPVendeursClients entity)
        {
            this.SendPropertyChanging();
            entity.PPVendeurs = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPVendeursClients")]
    public partial class PPVendeursClients : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoVendeur;

        private long _NoClient;

        private System.DateTime _DateVisite;

        private EntityRef<PPClients> _PPClients;

        private EntityRef<PPVendeurs> _PPVendeurs;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoVendeurChanging(long value);
        partial void OnNoVendeurChanged();
        partial void OnNoClientChanging(long value);
        partial void OnNoClientChanged();
        partial void OnDateVisiteChanging(System.DateTime value);
        partial void OnDateVisiteChanged();
        #endregion

        public PPVendeursClients()
        {
            this._PPClients = default(EntityRef<PPClients>);
            this._PPVendeurs = default(EntityRef<PPVendeurs>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoVendeur", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoVendeur
        {
            get
            {
                return this._NoVendeur;
            }
            set
            {
                if ((this._NoVendeur != value))
                {
                    if (this._PPVendeurs.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoVendeurChanging(value);
                    this.SendPropertyChanging();
                    this._NoVendeur = value;
                    this.SendPropertyChanged("NoVendeur");
                    this.OnNoVendeurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoClient", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoClient
        {
            get
            {
                return this._NoClient;
            }
            set
            {
                if ((this._NoClient != value))
                {
                    if (this._PPClients.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoClientChanging(value);
                    this.SendPropertyChanging();
                    this._NoClient = value;
                    this.SendPropertyChanged("NoClient");
                    this.OnNoClientChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateVisite", DbType = "SmallDateTime NOT NULL", IsPrimaryKey = true)]
        public System.DateTime DateVisite
        {
            get
            {
                return this._DateVisite;
            }
            set
            {
                if ((this._DateVisite != value))
                {
                    this.OnDateVisiteChanging(value);
                    this.SendPropertyChanging();
                    this._DateVisite = value;
                    this.SendPropertyChanged("DateVisite");
                    this.OnDateVisiteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPClients_PPVendeursClients", Storage = "_PPClients", ThisKey = "NoClient", OtherKey = "NoClient", IsForeignKey = true)]
        public PPClients PPClients
        {
            get
            {
                return this._PPClients.Entity;
            }
            set
            {
                PPClients previousValue = this._PPClients.Entity;
                if (((previousValue != value)
                            || (this._PPClients.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPClients.Entity = null;
                        previousValue.PPVendeursClients.Remove(this);
                    }
                    this._PPClients.Entity = value;
                    if ((value != null))
                    {
                        value.PPVendeursClients.Add(this);
                        this._NoClient = value.NoClient;
                    }
                    else
                    {
                        this._NoClient = default(long);
                    }
                    this.SendPropertyChanged("PPClients");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPVendeurs_PPVendeursClients", Storage = "_PPVendeurs", ThisKey = "NoVendeur", OtherKey = "NoVendeur", IsForeignKey = true)]
        public PPVendeurs PPVendeurs
        {
            get
            {
                return this._PPVendeurs.Entity;
            }
            set
            {
                PPVendeurs previousValue = this._PPVendeurs.Entity;
                if (((previousValue != value)
                            || (this._PPVendeurs.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPVendeurs.Entity = null;
                        previousValue.PPVendeursClients.Remove(this);
                    }
                    this._PPVendeurs.Entity = value;
                    if ((value != null))
                    {
                        value.PPVendeursClients.Add(this);
                        this._NoVendeur = value.NoVendeur;
                    }
                    else
                    {
                        this._NoVendeur = default(long);
                    }
                    this.SendPropertyChanged("PPVendeurs");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPMessages")]
    public partial class PPMessages : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _NoMsg;

        private System.Nullable<int> _NoExpediteur;

        private string _DescMsg;

        private object _FichierJoint;

        private System.Nullable<short> _Lieu;

        private System.Nullable<System.DateTime> _dateEnvoi;

        private string _objet;

        private EntitySet<PPDestinataires> _PPDestinataires;

        private EntityRef<PPLieu> _PPLieu;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoMsgChanging(int value);
        partial void OnNoMsgChanged();
        partial void OnNoExpediteurChanging(System.Nullable<int> value);
        partial void OnNoExpediteurChanged();
        partial void OnDescMsgChanging(string value);
        partial void OnDescMsgChanged();
        partial void OnFichierJointChanging(object value);
        partial void OnFichierJointChanged();
        partial void OnLieuChanging(System.Nullable<short> value);
        partial void OnLieuChanged();
        partial void OndateEnvoiChanging(System.Nullable<System.DateTime> value);
        partial void OndateEnvoiChanged();
        partial void OnobjetChanging(string value);
        partial void OnobjetChanged();
        #endregion

        public PPMessages()
        {
            this._PPDestinataires = new EntitySet<PPDestinataires>(new Action<PPDestinataires>(this.attach_PPDestinataires), new Action<PPDestinataires>(this.detach_PPDestinataires));
            this._PPLieu = default(EntityRef<PPLieu>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoMsg", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int NoMsg
        {
            get
            {
                return this._NoMsg;
            }
            set
            {
                if ((this._NoMsg != value))
                {
                    this.OnNoMsgChanging(value);
                    this.SendPropertyChanging();
                    this._NoMsg = value;
                    this.SendPropertyChanged("NoMsg");
                    this.OnNoMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoExpediteur", DbType = "Int")]
        public System.Nullable<int> NoExpediteur
        {
            get
            {
                return this._NoExpediteur;
            }
            set
            {
                if ((this._NoExpediteur != value))
                {
                    this.OnNoExpediteurChanging(value);
                    this.SendPropertyChanging();
                    this._NoExpediteur = value;
                    this.SendPropertyChanged("NoExpediteur");
                    this.OnNoExpediteurChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DescMsg", DbType = "NVarChar(MAX)")]
        public string DescMsg
        {
            get
            {
                return this._DescMsg;
            }
            set
            {
                if ((this._DescMsg != value))
                {
                    this.OnDescMsgChanging(value);
                    this.SendPropertyChanging();
                    this._DescMsg = value;
                    this.SendPropertyChanged("DescMsg");
                    this.OnDescMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FichierJoint", DbType = "Variant", UpdateCheck = UpdateCheck.Never)]
        public object FichierJoint
        {
            get
            {
                return this._FichierJoint;
            }
            set
            {
                if ((this._FichierJoint != value))
                {
                    this.OnFichierJointChanging(value);
                    this.SendPropertyChanging();
                    this._FichierJoint = value;
                    this.SendPropertyChanged("FichierJoint");
                    this.OnFichierJointChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Lieu", DbType = "SmallInt")]
        public System.Nullable<short> Lieu
        {
            get
            {
                return this._Lieu;
            }
            set
            {
                if ((this._Lieu != value))
                {
                    if (this._PPLieu.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnLieuChanging(value);
                    this.SendPropertyChanging();
                    this._Lieu = value;
                    this.SendPropertyChanged("Lieu");
                    this.OnLieuChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dateEnvoi", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> dateEnvoi
        {
            get
            {
                return this._dateEnvoi;
            }
            set
            {
                if ((this._dateEnvoi != value))
                {
                    this.OndateEnvoiChanging(value);
                    this.SendPropertyChanging();
                    this._dateEnvoi = value;
                    this.SendPropertyChanged("dateEnvoi");
                    this.OndateEnvoiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_objet", DbType = "NVarChar(50)")]
        public string objet
        {
            get
            {
                return this._objet;
            }
            set
            {
                if ((this._objet != value))
                {
                    this.OnobjetChanging(value);
                    this.SendPropertyChanging();
                    this._objet = value;
                    this.SendPropertyChanged("objet");
                    this.OnobjetChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPMessages_PPDestinataires", Storage = "_PPDestinataires", ThisKey = "NoMsg", OtherKey = "NoMsg")]
        public EntitySet<PPDestinataires> PPDestinataires
        {
            get
            {
                return this._PPDestinataires;
            }
            set
            {
                this._PPDestinataires.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPLieu_PPMessages", Storage = "_PPLieu", ThisKey = "Lieu", OtherKey = "NoLieu", IsForeignKey = true)]
        public PPLieu PPLieu
        {
            get
            {
                return this._PPLieu.Entity;
            }
            set
            {
                PPLieu previousValue = this._PPLieu.Entity;
                if (((previousValue != value)
                            || (this._PPLieu.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPLieu.Entity = null;
                        previousValue.PPMessages.Remove(this);
                    }
                    this._PPLieu.Entity = value;
                    if ((value != null))
                    {
                        value.PPMessages.Add(this);
                        this._Lieu = value.NoLieu;
                    }
                    else
                    {
                        this._Lieu = default(Nullable<short>);
                    }
                    this.SendPropertyChanged("PPLieu");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPDestinataires(PPDestinataires entity)
        {
            this.SendPropertyChanging();
            entity.PPMessages = this;
        }

        private void detach_PPDestinataires(PPDestinataires entity)
        {
            this.SendPropertyChanging();
            entity.PPMessages = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPDestinataires")]
    public partial class PPDestinataires : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _NoMsg;

        private int _NoDestinataire;

        private System.Nullable<short> _EtatLu;

        private System.Nullable<short> _Lieu;

        private EntityRef<PPMessages> _PPMessages;

        private EntityRef<PPLieu> _PPLieu;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoMsgChanging(int value);
        partial void OnNoMsgChanged();
        partial void OnNoDestinataireChanging(int value);
        partial void OnNoDestinataireChanged();
        partial void OnEtatLuChanging(System.Nullable<short> value);
        partial void OnEtatLuChanged();
        partial void OnLieuChanging(System.Nullable<short> value);
        partial void OnLieuChanged();
        #endregion

        public PPDestinataires()
        {
            this._PPMessages = default(EntityRef<PPMessages>);
            this._PPLieu = default(EntityRef<PPLieu>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoMsg", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int NoMsg
        {
            get
            {
                return this._NoMsg;
            }
            set
            {
                if ((this._NoMsg != value))
                {
                    if (this._PPMessages.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnNoMsgChanging(value);
                    this.SendPropertyChanging();
                    this._NoMsg = value;
                    this.SendPropertyChanged("NoMsg");
                    this.OnNoMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoDestinataire", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int NoDestinataire
        {
            get
            {
                return this._NoDestinataire;
            }
            set
            {
                if ((this._NoDestinataire != value))
                {
                    this.OnNoDestinataireChanging(value);
                    this.SendPropertyChanging();
                    this._NoDestinataire = value;
                    this.SendPropertyChanged("NoDestinataire");
                    this.OnNoDestinataireChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EtatLu", DbType = "SmallInt")]
        public System.Nullable<short> EtatLu
        {
            get
            {
                return this._EtatLu;
            }
            set
            {
                if ((this._EtatLu != value))
                {
                    this.OnEtatLuChanging(value);
                    this.SendPropertyChanging();
                    this._EtatLu = value;
                    this.SendPropertyChanged("EtatLu");
                    this.OnEtatLuChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Lieu", DbType = "SmallInt")]
        public System.Nullable<short> Lieu
        {
            get
            {
                return this._Lieu;
            }
            set
            {
                if ((this._Lieu != value))
                {
                    if (this._PPLieu.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnLieuChanging(value);
                    this.SendPropertyChanging();
                    this._Lieu = value;
                    this.SendPropertyChanged("Lieu");
                    this.OnLieuChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPMessages_PPDestinataires", Storage = "_PPMessages", ThisKey = "NoMsg", OtherKey = "NoMsg", IsForeignKey = true)]
        public PPMessages PPMessages
        {
            get
            {
                return this._PPMessages.Entity;
            }
            set
            {
                PPMessages previousValue = this._PPMessages.Entity;
                if (((previousValue != value)
                            || (this._PPMessages.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPMessages.Entity = null;
                        previousValue.PPDestinataires.Remove(this);
                    }
                    this._PPMessages.Entity = value;
                    if ((value != null))
                    {
                        value.PPDestinataires.Add(this);
                        this._NoMsg = value.NoMsg;
                    }
                    else
                    {
                        this._NoMsg = default(int);
                    }
                    this.SendPropertyChanged("PPMessages");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPLieu_PPDestinataires", Storage = "_PPLieu", ThisKey = "Lieu", OtherKey = "NoLieu", IsForeignKey = true)]
        public PPLieu PPLieu
        {
            get
            {
                return this._PPLieu.Entity;
            }
            set
            {
                PPLieu previousValue = this._PPLieu.Entity;
                if (((previousValue != value)
                            || (this._PPLieu.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PPLieu.Entity = null;
                        previousValue.PPDestinataires.Remove(this);
                    }
                    this._PPLieu.Entity = value;
                    if ((value != null))
                    {
                        value.PPDestinataires.Add(this);
                        this._Lieu = value.NoLieu;
                    }
                    else
                    {
                        this._Lieu = default(Nullable<short>);
                    }
                    this.SendPropertyChanged("PPLieu");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPLieu")]
    public partial class PPLieu : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private short _NoLieu;

        private string _Description;

        private EntitySet<PPMessages> _PPMessages;

        private EntitySet<PPDestinataires> _PPDestinataires;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoLieuChanging(short value);
        partial void OnNoLieuChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public PPLieu()
        {
            this._PPMessages = new EntitySet<PPMessages>(new Action<PPMessages>(this.attach_PPMessages), new Action<PPMessages>(this.detach_PPMessages));
            this._PPDestinataires = new EntitySet<PPDestinataires>(new Action<PPDestinataires>(this.attach_PPDestinataires), new Action<PPDestinataires>(this.detach_PPDestinataires));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoLieu", DbType = "SmallInt NOT NULL", IsPrimaryKey = true)]
        public short NoLieu
        {
            get
            {
                return this._NoLieu;
            }
            set
            {
                if ((this._NoLieu != value))
                {
                    this.OnNoLieuChanging(value);
                    this.SendPropertyChanging();
                    this._NoLieu = value;
                    this.SendPropertyChanged("NoLieu");
                    this.OnNoLieuChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(50)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPLieu_PPMessages", Storage = "_PPMessages", ThisKey = "NoLieu", OtherKey = "Lieu")]
        public EntitySet<PPMessages> PPMessages
        {
            get
            {
                return this._PPMessages;
            }
            set
            {
                this._PPMessages.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PPLieu_PPDestinataires", Storage = "_PPDestinataires", ThisKey = "NoLieu", OtherKey = "Lieu")]
        public EntitySet<PPDestinataires> PPDestinataires
        {
            get
            {
                return this._PPDestinataires;
            }
            set
            {
                this._PPDestinataires.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PPMessages(PPMessages entity)
        {
            this.SendPropertyChanging();
            entity.PPLieu = this;
        }

        private void detach_PPMessages(PPMessages entity)
        {
            this.SendPropertyChanging();
            entity.PPLieu = null;
        }

        private void attach_PPDestinataires(PPDestinataires entity)
        {
            this.SendPropertyChanging();
            entity.PPLieu = this;
        }

        private void detach_PPDestinataires(PPDestinataires entity)
        {
            this.SendPropertyChanging();
            entity.PPLieu = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPGestionnaires")]
    public partial class PPGestionnaire : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _NoGestionnaire;

        private string _AdresseEmail;

        private string _MotDePasse;

        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAdresseEmailChanging(string value);
        partial void OnAdresseEmailChanged();
        partial void OnMotDePasseChanging(string value);
        partial void OnMotDePasseChanged();
        #endregion

        public PPGestionnaire()
        {
            OnCreated();
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoGestionnaire", DbType = "BigInt NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public long NoGestionnaire
        {
            get
            {
                return this._NoGestionnaire;
            }
            set
            {
                if ((this._NoGestionnaire != value))
                {
                    this._NoGestionnaire = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdresseEmail", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string AdresseEmail
        {
            get
            {
                return this._AdresseEmail;
            }
            set
            {
                if ((this._AdresseEmail != value))
                {
                    this.OnAdresseEmailChanging(value);
                    this.SendPropertyChanging();
                    this._AdresseEmail = value;
                    this.SendPropertyChanged("AdresseEmail");
                    this.OnAdresseEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MotDePasse", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string MotDePasse
        {
            get
            {
                return this._MotDePasse;
            }
            set
            {
                if ((this._MotDePasse != value))
                {
                    this.OnMotDePasseChanging(value);
                    this.SendPropertyChanging();
                    this._MotDePasse = value;
                    this.SendPropertyChanged("MotDePasse");
                    this.OnMotDePasseChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PPEvaluations")]
    public partial class PPEvaluations : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private long _NoClient;

        private long _NoProduit;

        private System.Nullable<decimal> _Cote;

        private string _Commentaire;

        private System.Nullable<System.DateTime> _DateMAJ;

        private System.Nullable<System.DateTime> _DateCreation;


        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoClientChanging(long value);
        partial void OnNoClientChanged();
        partial void OnNoProduitChanging(long value);
        partial void OnNoProduitChanged();
        partial void OnCoteChanging(System.Nullable<decimal> value);
        partial void OnCoteChanged();
        partial void OnCommentaireChanging(string value);
        partial void OnCommentaireChanged();
        partial void OnDateMAJChanging(System.Nullable<System.DateTime> value);
        partial void OnDateMAJChanged();
        partial void OnDateCreationChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreationChanged();
        #endregion

        public PPEvaluations()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoClient", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoClient
        {
            get
            {
                return this._NoClient;
            }
            set
            {
                if ((this._NoClient != value))
                {
                    this.OnNoClientChanging(value);
                    this.SendPropertyChanging();
                    this._NoClient = value;
                    this.SendPropertyChanged("NoClient");
                    this.OnNoClientChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NoProduit", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long NoProduit
        {
            get
            {
                return this._NoProduit;
            }
            set
            {
                if ((this._NoProduit != value))
                {
                    this.OnNoProduitChanging(value);
                    this.SendPropertyChanging();
                    this._NoProduit = value;
                    this.SendPropertyChanged("NoProduit");
                    this.OnNoProduitChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cote", DbType = "Numeric(1,0)")]
        [Required(ErrorMessage = "Le cote est requis.")]
        public System.Nullable<decimal> Cote
        {
            get
            {
                return this._Cote;
            }
            set
            {
                if ((this._Cote != value))
                {
                    this._Cote = value;
                }
                if ((this._Cote != value))
                {
                    this.OnCoteChanging(value);
                    this.SendPropertyChanging();
                    this._Cote = value;
                    this.SendPropertyChanged("Cote");
                    this.OnCoteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Commentaire", DbType = "VarChar(150)")]
        [Required(ErrorMessage = "Le commentaire est requis.")]
        [MinLength(3, ErrorMessage = "Le commentaire doit être entre 3 et 150 caractères.")]
        [MaxLength(150, ErrorMessage = "Le commentaire doit être entre 3 et 150 caractères.")]
        public string Commentaire
        {
            get
            {
                return this._Commentaire;
            }
            set
            {
                if ((this._Commentaire != value))
                {
                    this.OnCommentaireChanging(value);
                    this.SendPropertyChanging();
                    this._Commentaire = value;
                    this.SendPropertyChanged("Commentaire");
                    this.OnCommentaireChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateMAJ", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateMAJ
        {
            get
            {
                return this._DateMAJ;
            }
            set
            {
                if ((this._DateMAJ != value))
                {
                    this.OnDateMAJChanging(value);
                    this.SendPropertyChanging();
                    this._DateMAJ = value;
                    this.SendPropertyChanged("DateMAJ");
                    this.OnDateMAJChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateCreation", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> DateCreation
        {
            get
            {
                return this._DateCreation;
            }
            set
            {
                if ((this._DateCreation != value))
                {
                    this.OnDateCreationChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreation = value;
                    this.SendPropertyChanged("DateCreation");
                    this.OnDateCreationChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591