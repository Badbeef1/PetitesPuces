@model PetitesPuces.ViewModels.CatalogueViewModel
@using PagedList.Mvc;
@{
   Layout = null;
   const String strTriNum = "numero";
   const String strTriCat = "categorie";
   const String strTriDate = "date";
   ViewBag.Provenance = "Client";

   int intIndex = 0;
   var nomFichier = "";

   
}

<!DOCTYPE html>

<html>
<head>
   <meta name="viewport" content="width=device-width" http-equiv="Content-Type" charset="utf-8" />
   <title>Page Catalogue</title>
   <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
   <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
   <link rel="stylesheet" href="~/Content/css/styleGeneral.css" />
   <link rel="stylesheet" href="~/Content/css/Catalogue.css" />
   <style>
       @if (Model.vendeur != null && Model.vendeur != "")
       {
           var tabConfiguration = Model.vendeurCatalogue.Configuration.Split(';');

           var police = tabConfiguration[0];
           var fond = tabConfiguration[1];
           nomFichier = tabConfiguration[2];

           string strCssPolice = police == string.Empty ? "" : "color: " + police + "!important;";
           string strCssFond = fond == string.Empty ? "" : "background-color: " + fond + "!important;";

           <text>
            .sPersonnalisationCatalogue {
               @strCssFond
               @strCssPolice
           }
            </text>
       }

   </style>

   <script type="text/javascript">
        function rechercheChangement(optionSelection) {
           var divDateDebut = document.getElementById("divRechercheDateDebut");
           var divDateFin = document.getElementById("divRechercheDateFin");
           var elementZonetext = document.getElementById("tbRecherche");

           var strVisibleDiv = "d-flex";
           var strInvisible = "display: none;";
           var strVisibleInput = "display: block;";

           if (optionSelection == 4) {
               elementZonetext.style = strInvisible;

               divDateDebut.classList.add(strVisibleDiv);
               divDateFin.classList.add(strVisibleDiv);

               autoriseRechercheParDateParution();
           }
           else {
               elementZonetext.style = strVisibleInput;

               divDateDebut.classList.remove(strVisibleDiv);
               divDateFin.classList.remove(strVisibleDiv);

               document.getElementById('btnRecherche').disabled = false;
           }
       }

       function envoieRecherche() {
           var typeRecherche = document.getElementById('selTypeRech').value;
           var tbRecherche = document.getElementById('tbRecherche').value;
           var dtRecherche1 = document.getElementById('dtRechercheDebut').value;
           var dtRecherche2 = document.getElementById('dtRechercheFin').value;
           var recherche1 = null;
           var recherche2 = null;

           if (typeRecherche == 4) {
               recherche1 = dtRecherche1;
               recherche2 = dtRecherche2;
           }
           else {
               recherche1 = tbRecherche;
           }

           var categorie = '@Html.Raw(Model.strCategorie)';
           var dimension = @Model.pageDimension;
           var vendeur = '@Model.vendeur';

           var lien = '/Client/Catalogue?' +
               (categorie != null ? 'categorie=' + categorie + '&' : '') +
               ('recherche=' + recherche1 + '&') +
               (recherche2 != null ? 'recherche2=' + recherche2 + '&' : '') +
               ('pageDimension=' + dimension + '&') +
               (vendeur != null ? 'vendeur=' + vendeur + '&' : '') +
               ('typeRech=' + typeRecherche);
           location.href = lien;
       }

       //Recharge la page catalogue pour appliquer le changement du nombre de produits par page
       function envoieNbProduit(intNbProduit) {

           var categorie = '@Model.strCategorie';
           var recherche = '@Model.recherche';
           var recherche2 = '@Model.recherche2';
           var tri = '@Model.strTri';
           var typeRecherche = '@Model.typeRech';
           var vendeur = '@Model.vendeur';

           var lien = '/Client/Catalogue?' +
               (categorie != null ? 'categorie=' + categorie + '&' : '') +
               (recherche != null ? 'recherche=' + recherche + '&' : '') +
               (recherche2 != null ? 'recherche2=' + recherche2 + '&' : '') +
               (tri != null ? 'tri=' + tri + '&' : '') +
               ('pageDimension=' + intNbProduit + '&') +
               (vendeur != null ? 'vendeur=' + vendeur + '&' : '') +
               ('typeRech=' + typeRecherche);

           location.href = lien;
       }

       function autoriseRechercheParDateParution() {
           var rechercheSelection = document.getElementById('selTypeRech');

           if (rechercheSelection.value == 4) {
               var Debut = document.getElementById('dtRechercheDebut');
               var Fin = document.getElementById('dtRechercheFin');

               var unBouton = document.getElementById('btnRecherche');

               var dtDebut = Date.parse(Debut.value) || 0;
               var dtFin = Date.parse(Fin.value) || 0;

               //S'assure qu'il n'y est pas d'inversion entre la date de début et celle de fin
               Fin.min = (dtDebut > 0) ? Debut.value : "";
               Debut.max = (dtFin > 0) ? Fin.value : "";

               unBouton.disabled = !(dtDebut > 0 && dtFin > 0);
           }  
       }

   </script>
</head>
<body class="sPersonnalisationCatalogue" onpageshow="rechercheChangement(document.getElementById('selTypeRech').value)">

    @Html.Partial("test")

    @using (Html.BeginForm())
    {
        <div class="container-fluid">
            <div class="row flex-xl-nowrap">
                <div class="col-sm-3 col-md-2 hidden-xs-down bd-sidebar bg-light">
                    <nav class="sidebar bg-light collapse bd-links">
                        <h6 class="mt-2">Catégorie de produit</h6>
                        <ul class="nav nav-pills flex-column" id="parentAccordeon">
                            @foreach (var categorie in Model.dicVendeur)
                            {
                                <li class="nav-item">
                                    <div class="row">
                                        <a class="nav-link" href="@Url.Action("Catalogue", new { categorie = categorie.Key, Model.pageDimension})">@categorie.Key.ToString()</a>
                                        <a data-toggle="collapse" href="@("#accordeon" + intIndex)">+</a>
                                    </div>

                                    <ul class="collapse" id="@("accordeon" + intIndex)">
                                        @foreach (var vendeurs in categorie.Value)
                                        {
                                            <li><a class="nav-link" href="@Url.Action("Catalogue", new { vendeur = vendeurs, Model.pageDimension})">@vendeurs.ToString()</a></li>
                                        }
                                    </ul>
                                </li>
                                intIndex++;
                            }
                        </ul>
                        <h6 class="mt-2">Vendeur</h6>
                        <ul class="nav nav-pills flex-column">
                            @foreach (var vendeurs in Model.lstVendeur)
                            {
                                <li class="nav-item">
                                    @Html.ActionLink(vendeurs.NomAffaires, "Catalogue", new { vendeur = vendeurs.NomAffaires, Model.pageDimension })
                                </li>
                            }
                        </ul>
                    </nav>
                </div>

                <main class="container">
                    @if (Model.vendeur != null && Model.vendeur != "" && nomFichier != "")
                    {
                        <img src="~/Content/images/@nomFichier" style="max-height:200px; max-width:1000px; height:200px; width:1000px;" />
                    }

                    <h3>
                        Catalogue
                        @if (Model.vendeur != null && Model.vendeur != "")
                        {
                            @Html.DisplayFor(x => x.vendeurCatalogue.NomAffaires)
                        }
                    </h3>
                    <div class="row">
                        <div class="col-5">
                            <div id="divRecherche" class="border-secondary card">
                                <h6 class="card-header">Recherche</h6>
                                <div class="card-body d-flex flex-wrap">
                                    <input type="text" id="tbRecherche" value="" placeholder="Que recherchez-vous?" class="form-control border-primary col-12">
                                    <div id="divRechercheDateDebut" style="display: none;">
                                        <label for="dtRechercheDebut" class="col-form-label">Date de début</label>
                                        <input type="date" id="dtRechercheDebut" class="form-control border-primary"  onchange="autoriseRechercheParDateParution();" />
                                    </div>
                                    <div id="divRechercheDateFin" style="display:none;">
                                        <label for="dtRechercheFin" class="col-form-label">Date de fin</label>
                                        <input type="date" id="dtRechercheFin" class="form-control border-primary" onchange="autoriseRechercheParDateParution();" />
                                    </div>
                                    <br />
                                    <select id="selTypeRech" class="custom-select border-primary text-primary col-6 mt-3" onchange="rechercheChangement(this.value);">
                                        <option value="1" selected>Nom produit</option>
                                        <option value="2">Numéro produit</option>
                                        <option value="3">Description produit</option>
                                        <option value="4">Date de parution</option>
                                        <option value="5">Catégorie</option>
                                    </select>
                                    <button id="btnRecherche" type="button" class="btn btn-outline-primary mt-3 ml-auto" onclick="envoieRecherche()">Lancer recherche <span class="fas fa-search"></span></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-7">
                            <div id="divTriEtNbItems" class="border rounded border-secondary card">
                                <h6 class="card-header">Présentation</h6>
                                <div class="card-body d-flex">
                                    <div class="">
                                        <label class="font-weight-bold">Classer par </label><br /><br />
                                        @{
                                            var strClasse = "btn btn-outline-primary";
                                            if (Model.strTri != null && Model.strTri.Contains(strTriNum))
                                            {
                                                strClasse += " focus";
                                            }
                                        }
                                        <a href="@Url.Action("Catalogue", new { @tri = ViewBag.TriNum, @categorie = Model.strCategorie, Model.recherche, Model.recherche2, Model.pageDimension, Model.typeRech, Model.vendeur})" class="@strClasse">
                                            Numéro de produit
                                            @if ("!" + strTriNum == Model.strTri)
                                            {
                                                <span class="fas fa-sort-numeric-down"></span>
                                            }
                                            else
                                            {
                                                <span class="fas fa-sort-numeric-up"></span>
                                            }
                                        </a>
                                        @{
                                            strClasse = "btn btn-outline-primary";
                                            if (Model.strTri != null && Model.strTri.Contains(strTriCat))
                                            {
                                                strClasse += " focus";
                                            }
                                        }
                                        <a href="@Url.Action("Catalogue", new { @tri = ViewBag.TriCat, @categorie = Model.strCategorie, Model.recherche, Model.recherche2, Model.pageDimension, Model.typeRech, Model.vendeur})" class="@strClasse">
                                            Catégorie
                                            @if ("!" + strTriCat == Model.strTri)
                                            {
                                                <span class="fas fa-sort-alpha-down"></span>
                                            }
                                            else
                                            {
                                                <span class="fas fa-sort-alpha-up"></span>
                                            }
                                        </a>
                                        @{
                                            strClasse = "btn btn-outline-primary";
                                            if (Model.strTri != null && Model.strTri.Contains(strTriDate))
                                            {
                                                strClasse += " focus";
                                            }
                                        }
                                        <a href="@Url.Action("Catalogue", new { @tri = ViewBag.TriDate, @categorie = Model.strCategorie, Model.recherche, Model.recherche2 , Model.pageDimension, Model.typeRech, Model.vendeur})" class="@strClasse">
                                            Date de parution
                                            @if ("!" + strTriDate == Model.strTri)
                                            {
                                                <span class="fas fa-sort-amount-down"></span>
                                            }
                                            else
                                            {
                                                <span class="fas fa-sort-amount-up"></span>
                                            }
                                        </a>
                                    </div>
                                    <div class="ml-auto">
                                        <label for="ProduitParPage" class="font-weight-bold">Par page</label><br /><br />
                                        @Html.DropDownListFor(x => x.pageDimension, (SelectList)ViewBag.ListeNbItems, new { @class = "custom-select border-primary text-primary", @onchange = "envoieNbProduit(this.value)" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    @Html.PagedListPager(Model.iplProduits, page => Url.Action("Catalogue", new { page, Model.pageDimension, @tri = ViewBag.TriActuel, Model.recherche, Model.recherche2, Model.typeRech, Model.vendeur }))
                    <br />
                    @Html.Partial("Client/ProduitCatalogue", Model.iplProduits)
                    <br />
                    @Html.PagedListPager(Model.iplProduits, page => Url.Action("Catalogue", new { page, Model.pageDimension, @tri = ViewBag.TriActuel, Model.recherche, Model.recherche2, Model.typeRech, Model.vendeur }))
                </main>
            </div>
        </div>

        <div class="modal" tabindex="-1" role="dialog" id="modAjoutPanier" aria-hidden="true" style="z-index:1072;">
            <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Ajout au panier</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p style="color:red; display:none;" id="messageAvertissement">
                            Attention! Le produit est déjà <br /><span id="spQuantite"></span> fois dans votre panier!
                        </p>
                        <p style="color:red; display:none;" id="messageIndisponible">
                            L'inventaire ne permet pas de commander plus de ce produit!
                        </p>
                        <div class="d-flex" id="divControleQuantite">
                            <label for="numNbAjoutPanier" class="col-form-label mr-auto">Quantité: </label>
                            <input id="numNbAjoutPanier" type="number" class="form-control col-5" min="1" step="1" value="1" onKeyUp="if (!Number.isInteger(Number(this.value))) { this.value = '';  } else if (Number(this.value) > Number(this.max)) { this.value = ''; } else if (Number(this.value) < 1) { this.value = '';}"   />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="btnAjoutProduit" type="button" class="btn btn-outline-success" onclick="$.AjoutAuPanier(this.value)">Ajouter</button>
                        <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Annuler</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="~/Scripts/jquery-3.3.1.min.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        <script type="text/javascript">
            $.AjoutAuPanier = function (numeroDeProduit) {
                let qqtProduitDesire = $('#numNbAjoutPanier').val();

                $.ajax({
                    url: '@Url.Action("AjoutAuPanier", "Client")',
                    contentType: 'application/json;',
                    type: "POST",
                    data: JSON.stringify({ "intNoProduit": numeroDeProduit, "intNbProduit": qqtProduitDesire }),
                    success: function (elementRetour, status, xhr) {
                        console.log('parfait => ' + elementRetour);
                        $('#modAjoutPanier').modal('hide');
                    },
                    failure: function (response) {
                        console.log("La requete d'ajout a échouée!");
                    },
                    error: function (response) {
                        console.log("Une erreur dans la requete d'ajout!");
                    }
                });
            }

            $.VerificationDisponibilite = function (numeroDeProduit, nombreProduitTotal) {
                $.ajax({
                    url: '@Url.Action("EtatProduitPanier", "Client")',
                    contentType: 'application/json;',
                    type: "POST",
                    data: JSON.stringify({ "intNoProduit": numeroDeProduit }),
                    success: function (elementRetour, status, xhr) {
                        console.log('parfait => ' + elementRetour);

                        if (elementRetour == nombreProduitTotal) {
                            $('#messageIndisponible').css("display", "");
                            $('#divControleQuantite').removeClass("d-flex");
                            $('#divControleQuantite').css("display", "none");
                            $('#btnAjoutProduit').css("visibility", "hidden");

                            $('#modAjoutPanier').modal('show');
                        }
                        else if (elementRetour > 0) {
                            $('#messageAvertissement').css("display", "");
                            $('#spQuantite').text(elementRetour);
                            $('#numNbAjoutPanier').prop("max", nombreProduitTotal - elementRetour);

                            $('#btnAjoutProduit').val(numeroDeProduit);

                            $('#modAjoutPanier').modal('show');
                        }
                        else {
                            $('#numNbAjoutPanier').prop("max", nombreProduitTotal - elementRetour);
                            $('#btnAjoutProduit').val(numeroDeProduit);

                            $('#modAjoutPanier').modal('show');
                        }

                    },
                    failure: function (response) {
                        console.log("La requete d'ajout a échouée!");
                    },
                    error: function (response) {
                        console.log("Une erreur dans la requete d'ajout!");
                    }
                });
            }
            
        </script>
    }
</body>
</html>
