@using PetitesPuces.Models
@using System.Globalization
@{
   Culture = UICulture = "en-US";
}
@model AccueilGestionnaireViewModel
<!doctype html>
<html lang="fr">
<head>
   <meta charset="UTF-8">
   <title>Petites Puces</title>
   <!--Librairies externes (Bootstrap 4.2)-->
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
   <link rel="stylesheet" href="~/Content/css/styleGeneral.css">
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"></script>
   <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"></script>
   <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
   <style>
      /*
        * Base structure
        */

      /* Move down content because we have a fixed navbar that is 50px tall */

      /*body {
            padding-top: 50px;
        }*/

      /*
        * Typography
        */

      h1 {
         margin-bottom: 20px;
         padding-bottom: 9px;
         border-bottom: 1px solid #eee;
      }

      /*
        * Sidebar
        */

      .sidebar {
         position: fixed;
         top: 51px;
         bottom: 0;
         left: 0;
         z-index: 1000;
         padding: 20px;
         overflow-x: hidden;
         overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
         border-right: 1px solid #eee;
      }

      /* Sidebar navigation */
      .sidebar {
         padding-left: 0;
         padding-right: 0;
      }

         .sidebar .nav {
            margin-bottom: 20px;
         }

         .sidebar .nav-item {
            width: 100%;
         }

            .sidebar .nav-item + .nav-item {
               margin-left: 0;
            }

         .sidebar .nav-link {
            border-radius: 0;
         }

      /*
        * Dashboard
        */

      /* Placeholders */
      .placeholders {
         padding-bottom: 3rem;
      }

      .placeholder img {
         padding-top: 1.5rem;
         padding-bottom: 1.5rem;
      }

      .input-validation-error {
         border: 1px solid #ff0000;
         background-color: white;
      }

      /*Copie de la classe alert de bootstrap*/
      .field-validation-error {
         color: #b94a48;
         background-color: #f2dede;
         border-color: #eed3d7;
      }
   </style>
   <script type="text/javascript">
      //fonction qui permet de supprimer une catégorie
      function supprimerCategorie(id) {
         if (confirm('Voulez-vous vraiment supprimer cette catégorie ?')) {
            console.log('Supprimer');

            //Requête AJAX pour aller supprimer la catégorie passé en paramètre
            $.ajax({
               url: "/Gestionnaire/SupprimerCategorie",
               data: { "id": id },
               success: success,
               error: error,
            });
         }
      }

      function modifierRedevance(id) {
         console.log('J\'essaye de modifier');
         var redevance = $('#redevance_' + id).val();
         redevance = redevance.replace(',', '.');
         redevance = parseFloat(redevance);

         $.ajax({
            url: "/Gestionnaire/ModifierRedevance",
            data: { "id": id, "redevance": redevance },
            success: success,
            error: error,
         });
      }

      //Cette fonction est appeler lorsqu'une redevance a été payé 
      function payerRedevance(noHistorique, nomAffaire, redevance) {
         var fltRedevance = parseFloat(redevance);
         if (confirm("Voulez-vous vraiment confirmer le paiement de redevance #" + noHistorique + "? \n" + "Si oui, vous confirmez le paiement de " + nomAffaire + " pour un montant de " + fltRedevance.toFixed(2) + " $.")) {
            console.log('je paye');
            //Requête ajax qui va permettre d'effectuer le paiement
            $.ajax({
               url: "/Gestionnaire/PayerRedevance",
               data: { "id": noHistorique },
               success: success,
               error: error,
            });
         }
         else {
            console.log('laisse faire le paiement');
         }
      }

      //Cette fonction permet de faire un tri sur les redevances dues
      function triDate() {
         //Vérifier si c'est un tri ascendant ou descendant
         var classeCss = $("#fa_date").attr('class');

         //tri ascendant
         if (classeCss === 'fas fa-sort-amount-down') {
            $("#fa_date").attr('class','fas fa-sort-amount-up');
            $.ajax({
               url: "/Gestionnaire/triRedevance",
               data: { "tri": 'DateA' },
               success: successTri,
               error: error,
            });
         }
         else {
            //tri descendant
            $("#fa_date").attr('class', 'fas fa-sort-amount-down');

            $.ajax({
               url: "/Gestionnaire/triRedevance",
               data: { "tri": 'DateD' },
               success: successTri,
               error: error,
            });
         }
         //var strClass = $('');

      }

      //Cette fonction permet de faire un tri sur les clients
      function triVendeur() {
         //Faire le tri par clients
         $.ajax({
            url: "/Gestionnaire/triRedevance",
            data: { "tri": 'Vendeur' },
            success: successTri,
            error: error,
         });
      }

      function success() {
         console.log('réussi');
         location.href = "/Gestionnaire/AccueilGestionnaire";
      }
      function successTri(model) {
         console.log(model);
         $('#table_redevancesDues').html(model);
      }

      function error() {
         console.log('erreur');
      }
   </script>
</head>
<body>
   @if (ViewBag.Section != null)
   {
      <script>
        $(function () {
                window.location.hash = '#@ViewBag.Section';
        });
      </script>
   }
   <!--Barre de navigation-->
   @Html.Partial("index")
   <div class="container-fluid">
      <div class="row">
         <nav class="col-sm-3 col-md-2 hidden-xs-down bg-faded sidebar">
            <ul class="nav nav-pills flex-column">
               <li class="nav-item">
                  <a class="nav-link active" href="#">Accueil <span class="sr-only">(current)</span></a>
               </li>
               <li class="nav-item">
                  <a class="nav-link" href="#sec_demandes_vendeurs">Demandes de vendeurs</a>
               </li>
               <li class="nav-item">
                  <a class="nav-link" href="#sec_redevances">
                     Les Redevances
                  </a>
               </li>
               <li class="nav-item">
                  <a class="nav-link" href="#sec_ajout_categorie">
                     Ajouter une cat&eacute;gorie
                  </a>
               </li>
               <li class="nav-item">
                  <a class="nav-link" href="#sec_suppression_cat">
                     Supression de cat&eacute;gorie
                  </a>
               </li>
            </ul>
         </nav>

         <main class="col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3">
            <h2 id="sec_demandes_vendeurs">G&eacute;rer les nouvelles demandes de vendeur</h2>
            <div class="table-responsive">
               <table class="table table-striped">
                  <thead>
                     <tr>
                        <th>#Vendeur</th>
                        <th>Nom d'affaires</th>
                        <th>Nom Complet</th>
                        <th>Province</th>
                        <th>No Tel&eacute;phone</th>
                        <th>Détails Demande</th>
                     </tr>
                  </thead>
                  <tbody>
                     @foreach (var vendeur in Model.lstDemandesVendeurs)
                     {
                        <tr>
                           <td>@vendeur.NoVendeur</td>
                           <td>@vendeur.NomAffaires</td>
                           <td>@vendeur.Prenom @vendeur.Nom</td>
                           <td>@vendeur.Province</td>
                           <td>@vendeur.Tel1</td>
                           <td>
                              @Html.ActionLink("Détails du vendeur", "DetailVendeur", "Gestionnaire", new { id = vendeur.NoVendeur }, new { @class = "btn btn-primary" })
                           </td>
                        </tr>
                     }

                  </tbody>
               </table>
            </div>
            <hr>
            <h2 id="sec_redevances">Les redevances dues</h2>

            <div class="d-flex flex-row">
               <div class="col-sm-1">
                  <button class="btn btn-outline-primary" onclick="triDate();">
                     Tri Par Date
                     <span id="fa_date" class="fas fa-sort-amount-down"></span>
                  </button>
               </div>
               <div class="col-sm-1">
                  <button class="btn btn-outline-primary" onclick="triVendeur();">
                     Tri Par Vendeur
                  </button>
               </div>
            </div>
            <br />
            <!-- Vue partiel qui génère un tableau avec les redevances dues-->
            <div id="table_redevancesDues">
               @Html.Partial("Gestionnaire/RedevancesDues", Model.lstRedevances)
            </div>

            <hr>
            <h3>Gérer les % de redevances</h3>
            <table class="table table-striped">
               <thead>
                  <tr>
                     <th>No de Vendeur</th>
                     <th>Nom d'affaires</th>
                     <th>Nom Complet</th>
                     <th>No T&eacute;l&eacute;phone</th>
                     <th>Pourcentage de redevance</th>
                     <th>Modifier</th>
                  </tr>
               </thead>
               <tbody>
                  @foreach (var vendeur in Model.lstVendeurs)
                  {
                     <tr>
                        <td>@vendeur.Key.NoVendeur</td>
                        <td>@vendeur.Key.NomAffaires</td>
                        <td>@vendeur.Key.Prenom @vendeur.Key.Nom</td>
                        <td>@vendeur.Key.Tel1</td>
                        <td>
                           @{
                              string poucentage = vendeur.Key.Pourcentage.ToString();
                              //poucentage.Replace(',', '.');
                              //poucentage.Replace(CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator, ".");

                              if (vendeur.Value.Equals(true))
                              {

                                 <input type="number" min="0" max="100" step="0.25" value="@poucentage" disabled="disabled">
                              }
                              else
                              {
                                 <input id="redevance_@vendeur.Key.NoVendeur" type="number" min="0" max="100" step="0.25" value="@poucentage">
                              }
                           }

                        </td>
                        <td>
                           @{
                              if (vendeur.Value.Equals(true))
                              {
                                 <button id="btn_modifier_@vendeur.Key.NoVendeur" class="btn btn-success" disabled="disabled">Modifier la redevance</button>
                              }
                              else
                              {
                                 <button id="btn_modifier" class="btn btn-success" onclick="modifierRedevance(@vendeur.Key.NoVendeur)">Modifier la redevance</button>
                              }
                           }
                        </td>
                     </tr>
                  }
               </tbody>
            </table>

            <hr />
            <h2 id="sec_ajout_categorie">Ajout d'une cat&eacute;gorie</h2>
            <!--<form>-->
            @using (Html.BeginForm("AccueilGestionnaire", "Gestionnaire", FormMethod.Post))
            {
               <br>
               <div class="card">
                  <div class="card-body">
                     <div class="container">
                        <div class="form-group row">
                           <div class="col-sm-8">
                              <div class="input-group">
                                 <div class="input-group-prepend">
                                    <span class="input-group-text">Description</span>
                                 </div>
                                 @Html.HiddenFor(cat => cat.categorie.NoCategorie)
                                 @Html.EditorFor(cat => cat.categorie.Description, new { htmlAttributes = new { @class = "form-control" } })
                                 @Html.ValidationMessageFor(cat => cat.categorie.Description)

                                 <!--<textarea class="form-control" aria-label="With textarea"></textarea>-->
                              </div>
                           </div>
                        </div>
                        <div class="form-group row">
                           <div class="col-sm-8">
                              <div class="input-group">
                                 <div class="input-group-prepend">
                                    <span class="input-group-text">D&eacute;tails</span>
                                 </div>
                                 <!--<textarea class="form-control" aria-label="With textarea"></textarea>-->
                                 @Html.EditorFor(cat => cat.categorie.Details, new { htmlAttributes = new { @class = "form-control" } })
                                 @Html.ValidationMessageFor(cat => cat.categorie.Details)
                              </div>
                           </div>
                        </div>
                        <div class="form-group row">
                           <div class="col-sm-8">
                              <input type="submit" value="Ajouter Catégorie" class="btn btn-success" style="width:100%">
                           </div>
                        </div>
                     </div>
                  </div>

               </div>
            }
            <!--</form>-->
            <hr>
            <h2 id="sec_suppression_cat">Suppression d'une cat&eacute;gorie</h2>
            <table class="table table-striped">
               <thead>
                  <tr>
                     <th>No de Cat&eacute;gorie</th>
                     <th>Description</th>
                     <th>D&eacute;tails</th>
                     <th>Supprimer</th>
                  </tr>
               </thead>
               <tbody>
                  @foreach (var cat in Model.lstCategories)
                  {
                     <tr>
                        <td>@cat.Key.NoCategorie</td>
                        <td>@cat.Key.Description</td>
                        <td>@cat.Key.Details</td>
                        @{
                           if (cat.Value.Equals(true))
                           {
                              <td><button id="btnSupprimer_@cat.Key.NoCategorie" class="btn btn-danger" onclick="supprimerCategorie(@cat.Key.NoCategorie)">Supprimer</button></td>
                           }
                           else
                           {
                              <td><button id="btnSupprimer_@cat.Key.NoCategorie" class="btn btn-danger" onclick="supprimerCategorie(@cat.Key.NoCategorie)" disabled="disabled">Supprimer</button></td>
                           }
                        }

                     </tr>
                  }

               </tbody>
            </table>
         </main>
      </div>
   </div>
</body>
</html>